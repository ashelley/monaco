{"version":3,"sources":["fake","file:///C:/REPOS/monaco/vscode/src/vs/editor/standalone-languages/csharp.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACRA;;;gGAGgG;;IAEhG,YAAY,CAAC;IAKF,YAAI,GAA8B;QAC5C,WAAW,EAAE,sFAAsF;QACnG,QAAQ,EAAE;YACT,WAAW,EAAE,IAAI;YACjB,YAAY,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC;SAC1B;QACD,QAAQ,EAAE,CAAC,CAAC,GAAG,EAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAC,GAAG,CAAC,CAAC;QACtD,gBAAgB,EAAE;YACjB,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC,QAAQ,EAAE,SAAS,CAAC,EAAE;YACvD,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,QAAQ,EAAE,SAAS,CAAC,EAAE;YACzD,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC,QAAQ,EAAE,SAAS,CAAC,EAAE;YACvD,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC,QAAQ,EAAE,SAAS,CAAC,EAAE;YACvD,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC,QAAQ,EAAE,SAAS,CAAC,EAAE;SACvD;KACD,CAAC;IAES,gBAAQ,GAAe;QACjC,YAAY,EAAE,EAAE;QAChB,YAAY,EAAE,KAAK;QAEnB,QAAQ,EAAE;YACT,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,iBAAiB,EAAE;YACnD,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,kBAAkB,EAAE;YACpD,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,uBAAuB,EAAE;YACzD,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,iBAAiB,EAAE;SACnD;QAED,QAAQ,EAAE;YACT,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,MAAM,EAAE,OAAO;YACvE,QAAQ,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,OAAO,EAAE,QAAQ;YACnE,QAAQ,EAAE,SAAS,EAAE,QAAQ,EAAE,UAAU,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK;YAC5D,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,MAAM,EAAE,SAAS,EAAE,WAAW;YACtE,SAAS,EAAE,UAAU,EAAE,KAAK,EAAE,OAAO,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,MAAM;YACrE,OAAO,EAAE,IAAI,EAAE,KAAK,EAAE,SAAS,EAAE,IAAI,EAAE,OAAO,EAAE,UAAU,EAAE,MAAM;YAClE,QAAQ,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,SAAS,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM;YACrE,KAAK,EAAE,OAAO,EAAE,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,MAAM,EAAE,SAAS,EAAE,WAAW;YACtE,YAAY,EAAE,QAAQ,EAAE,OAAO,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,OAAO;YACtE,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,UAAU,EAAE,QAAQ,EAAE,WAAW;YACtE,UAAU,EAAE,SAAS,EAAE,UAAU,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,UAAU;YAC3E,UAAU,EAAE,SAAS,EAAE,UAAU,EAAE,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,QAAQ;YAC1E,UAAU,EAAE,MAAM,EAAE,OAAO,EAAE,UAAU,EAAE,UAAU,EAAE,WAAW,EAAE,MAAM;YACxE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAC,OAAO,EAAC,QAAQ,EAAC,YAAY,EAAC,QAAQ,EAAE,QAAQ;YACzE,MAAM;SACL;QAEF,gBAAgB,EAAE;YACjB,WAAW,EAAE,OAAO;SACpB;QAED,YAAY,EAAE;YACb,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,QAAQ,EAAE,SAAS,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM;SACnE;QAED,SAAS,EAAE;YACV,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;YAClE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAC,IAAI;YAClD,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI;SAClE;QAED,OAAO,EAAG,uBAAuB;QAEjC,mBAAmB;QACnB,OAAO,EAAE,uEAAuE;QAEhF,uCAAuC;QACvC,SAAS,EAAE;YACV,IAAI,EAAE;gBAEL,2BAA2B;gBAC3B,CAAC,iBAAiB,EAAE,EAAE,KAAK,EAAE;4BAC5B,mBAAmB,EAAE,EAAE,KAAK,EAAE,YAAY,EAAE,IAAI,EAAE,YAAY,EAAE;4BAChE,WAAW,EAAE,EAAE,KAAK,EAAE,YAAY,EAAE,IAAI,EAAE,YAAY,EAAE;4BACxD,UAAU,EAAE,EAAE,KAAK,EAAE,YAAY,EAAE,IAAI,EAAE,YAAY,EAAE;yBACtD;qBACD,CAAC;gBAEF,aAAa;gBACb,EAAE,OAAO,EAAE,aAAa,EAAE;gBAE1B,2BAA2B;gBAC3B,CAAC,GAAG,EAAE,EAAE,KAAK,EAAE;4BACb,yBAAyB,EAAG,EAAE,KAAK,EAAE,cAAc,EAAE,OAAO,EAAE,QAAQ,EAAE,IAAI,EAAE,MAAM,EAAE;4BACrF,UAAU,EAAK,WAAW,EAAE,EAAE,CAAC;gBAClC,CAAC,YAAY,EAAE,WAAW,CAAC;gBAC3B,CAAC,kBAAkB,EAAE,WAAW,CAAC;gBACjC,CAAC,UAAU,EAAE,EAAE,KAAK,EAAE,EAAE,YAAY,EAAE,WAAW,EAAE,UAAU,EAAI,EAAE,EAAE,EAAE,CAAE;gBAEzE,iBAAiB;gBACjB,CAAC,KAAK,EAAE,EAAE,KAAK,EAAE,cAAc,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,YAAY,EAAE,CAAE;gBAEzE,sBAAsB;gBACtB,CAAC,KAAK,EAAE,EAAE,KAAK,EAAE,cAAc,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,qBAAqB,EAAE,CAAE;gBAElF,UAAU;gBACV,CAAC,iCAAiC,EAAE,cAAc,CAAC;gBACnD,CAAC,mBAAmB,EAAE,YAAY,CAAC;gBACnC,CAAC,KAAK,EAAE,QAAQ,CAAC;gBAEjB,gDAAgD;gBAChD,CAAC,OAAO,EAAE,WAAW,CAAC;gBAEtB,UAAU;gBACV,CAAC,iBAAiB,EAAE,gBAAgB,CAAE;gBACtC,CAAC,GAAG,EAAG,EAAE,KAAK,EAAE,cAAc,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,SAAS,EAAE,CAAE;gBAErE,aAAa;gBACb,CAAC,UAAU,EAAE,QAAQ,CAAC;gBACtB,CAAC,kBAAkB,EAAE,CAAC,QAAQ,EAAC,eAAe,EAAC,QAAQ,CAAC,CAAC;gBACzD,CAAC,GAAG,EAAE,gBAAgB,CAAC;aACvB;YAED,SAAS,EAAE;gBACV,CAAC,gBAAgB,EAAE,EAAE,KAAK,EACzB,EAAE,WAAW,EAAE,EAAC,KAAK,EAAC,YAAY,EAAC;4BACnC,UAAU,EAAE,YAAY,EAAE;qBAC1B,CAAC;gBACF,CAAC,IAAI,EAAE,WAAW,CAAC;gBACnB,CAAC,EAAE,EAAC,EAAE,EAAC,MAAM,CAAC;aACd;YAED,SAAS,EAAE;gBACV,EAAE,OAAO,EAAE,aAAa,EAAE;gBAC1B,CAAC,UAAU,EAAE,WAAW,CAAC;gBACzB,CAAC,OAAO,EAAE,WAAW,CAAC;gBACtB,CAAC,EAAE,EAAC,EAAE,EAAC,MAAM,CAAC;aACd;YAED,OAAO,EAAE;gBACR,CAAC,SAAS,EAAE,SAAS,CAAE;gBACvB,iEAAiE;gBACjE,CAAC,MAAM,EAAK,SAAS,EAAE,MAAM,CAAG;gBAChC,CAAC,OAAO,EAAI,SAAS,CAAE;aACvB;YAED,MAAM,EAAE;gBACP,CAAC,SAAS,EAAG,QAAQ,CAAC;gBACtB,CAAC,UAAU,EAAE,eAAe,CAAC;gBAC7B,CAAC,KAAK,EAAO,uBAAuB,CAAC;gBACrC,CAAC,GAAG,EAAS,EAAE,KAAK,EAAE,cAAc,EAAE,OAAO,EAAE,QAAQ,EAAE,IAAI,EAAE,MAAM,EAAE,CAAE;aACzE;YAED,SAAS,EAAE;gBACV,CAAC,OAAO,EAAK,QAAQ,CAAC;gBACtB,CAAC,IAAI,EAAQ,eAAe,CAAC;gBAC7B,CAAC,GAAG,EAAS,EAAE,KAAK,EAAE,cAAc,EAAE,OAAO,EAAE,QAAQ,EAAE,IAAI,EAAE,MAAM,EAAE,CAAE;aACzE;YAED,kBAAkB,EAAE;gBACnB,CAAC,UAAU,EAAE,QAAQ,CAAC;gBACtB,CAAC,UAAU,EAAE,eAAe,CAAC;gBAC7B,CAAC,KAAK,EAAO,uBAAuB,CAAC;gBACrC,CAAC,IAAI,EAAQ,eAAe,CAAC;gBAC7B,CAAC,IAAI,EAAQ,eAAe,CAAC;gBAC7B,CAAC,GAAG,EAAS,EAAE,KAAK,EAAE,cAAc,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,yBAAyB,EAAE,CAAE;gBAC3F,CAAC,GAAG,EAAS,EAAE,KAAK,EAAE,cAAc,EAAE,OAAO,EAAE,QAAQ,EAAE,IAAI,EAAE,MAAM,EAAE,CAAE;aACzE;YAED,UAAU,EAAE;gBACX,CAAC,mBAAmB,EAAE,eAAe,CAAE;gBACvC,CAAC,gBAAgB,EAAE,EAAE,CAAC;gBACtB,CAAC,MAAM,EAAQ,SAAS,EAAE,UAAU,CAAE;gBACtC,CAAC,SAAS,EAAK,SAAS,CAAC;aACzB;SACD;KACD,CAAC;;;AD9KF","file":"vs/editor/standalone-languages/csharp.js","sourcesContent":["}).call(this);","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n\r\n'use strict';\r\n\r\nimport IRichLanguageConfiguration = monaco.languages.LanguageConfiguration;\r\nimport ILanguage = monaco.languages.IMonarchLanguage;\r\n\r\nexport var conf:IRichLanguageConfiguration = {\r\n\twordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\#\\$\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g,\r\n\tcomments: {\r\n\t\tlineComment: '//',\r\n\t\tblockComment: ['/*', '*/'],\r\n\t},\r\n\tbrackets: [['{','}'], ['[',']'], ['(',')'], ['<','>']],\r\n\tautoClosingPairs: [\r\n\t\t{ open: '\"', close: '\"', notIn: ['string', 'comment'] },\r\n\t\t{ open: '\\'', close: '\\'', notIn: ['string', 'comment'] },\r\n\t\t{ open: '{', close: '}', notIn: ['string', 'comment'] },\r\n\t\t{ open: '[', close: ']', notIn: ['string', 'comment'] },\r\n\t\t{ open: '(', close: ')', notIn: ['string', 'comment'] },\r\n\t]\r\n};\r\n\r\nexport var language = <ILanguage> {\r\n\tdefaultToken: '',\r\n\ttokenPostfix: '.cs',\r\n\r\n\tbrackets: [\r\n\t\t{ open: '{', close: '}', token: 'delimiter.curly' },\r\n\t\t{ open: '[', close: ']', token: 'delimiter.square' },\r\n\t\t{ open: '(', close: ')', token: 'delimiter.parenthesis' },\r\n\t\t{ open: '<', close: '>', token: 'delimiter.angle' }\r\n\t],\r\n\r\n\tkeywords: [\r\n\t\t'extern', 'alias', 'using', 'bool', 'decimal', 'sbyte', 'byte', 'short',\r\n\t\t'ushort', 'int', 'uint', 'long', 'ulong', 'char', 'float', 'double',\r\n\t\t'object', 'dynamic', 'string', 'assembly', 'is', 'as', 'ref',\r\n\t\t'out', 'this', 'base', 'new', 'typeof', 'void', 'checked', 'unchecked',\r\n\t\t'default', 'delegate', 'var', 'const', 'if', 'else', 'switch', 'case',\r\n\t\t'while', 'do', 'for', 'foreach', 'in', 'break', 'continue', 'goto',\r\n\t\t'return', 'throw', 'try', 'catch', 'finally', 'lock', 'yield', 'from',\r\n\t\t'let', 'where', 'join', 'on', 'equals', 'into', 'orderby', 'ascending',\r\n\t\t'descending', 'select', 'group', 'by', 'namespace', 'partial', 'class',\r\n\t\t'field', 'event', 'method', 'param', 'property', 'public', 'protected',\r\n\t\t'internal', 'private', 'abstract', 'sealed', 'static', 'struct', 'readonly',\r\n\t\t'volatile', 'virtual', 'override', 'params', 'get', 'set', 'add', 'remove',\r\n\t\t'operator', 'true', 'false', 'implicit', 'explicit', 'interface', 'enum',\r\n\t\t'null', 'async', 'await','fixed','sizeof','stackalloc','unsafe', 'nameof',\r\n\t\t'when'\r\n\t\t],\r\n\r\n\tnamespaceFollows: [\r\n\t\t'namespace', 'using',\r\n\t],\r\n\r\n\tparenFollows: [\r\n\t\t'if', 'for', 'while', 'switch', 'foreach', 'using', 'catch', 'when'\r\n\t],\r\n\r\n\toperators: [\r\n\t\t'=', '??', '||', '&&', '|', '^', '&', '==', '!=', '<=', '>=', '<<',\r\n\t\t'+', '-', '*', '/', '%', '!', '~', '++', '--','+=',\r\n\t\t'-=', '*=', '/=', '%=', '&=', '|=', '^=', '<<=', '>>=', '>>', '=>'\r\n\t],\r\n\r\n\tsymbols:  /[=><!~?:&|+\\-*\\/\\^%]+/,\r\n\r\n\t// escape sequences\r\n\tescapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\r\n\r\n\t// The main tokenizer for our languages\r\n\ttokenizer: {\r\n\t\troot: [\r\n\r\n\t\t\t// identifiers and keywords\r\n\t\t\t[/\\@?[a-zA-Z_]\\w*/, { cases: {\r\n\t\t\t\t'@namespaceFollows': { token: 'keyword.$0', next: '@namespace' },\r\n\t\t\t\t'@keywords': { token: 'keyword.$0', next: '@qualified' },\r\n\t\t\t\t'@default': { token: 'identifier', next: '@qualified' }\r\n\t\t\t\t}\r\n\t\t\t}],\r\n\r\n\t\t\t// whitespace\r\n\t\t\t{ include: '@whitespace' },\r\n\r\n\t\t\t// delimiters and operators\r\n\t\t\t[/}/, { cases: {\r\n\t\t\t\t\t'$S2==interpolatedstring' : { token: 'string.quote', bracket: '@close', next: '@pop' }\r\n\t\t\t\t,\t'@default'   : '@brackets' } }],\r\n\t\t\t[/[{}()\\[\\]]/, '@brackets'],\r\n\t\t\t[/[<>](?!@symbols)/, '@brackets'],\r\n\t\t\t[/@symbols/, { cases: { '@operators': 'delimiter', '@default'  : '' } } ],\r\n\r\n\t\t\t// literal string\r\n\t\t\t[/\\@\"/, { token: 'string.quote', bracket: '@open', next: '@litstring' } ],\r\n\r\n\t\t\t// interpolated string\r\n\t\t\t[/\\$\"/, { token: 'string.quote', bracket: '@open', next: '@interpolatedstring' } ],\r\n\r\n\t\t\t// numbers\r\n\t\t\t[/\\d*\\.\\d+([eE][\\-+]?\\d+)?[fFdD]?/, 'number.float'],\r\n\t\t\t[/0[xX][0-9a-fA-F]+/, 'number.hex'],\r\n\t\t\t[/\\d+/, 'number'],\r\n\r\n\t\t\t// delimiter: after number because of .\\d floats\r\n\t\t\t[/[;,.]/, 'delimiter'],\r\n\r\n\t\t\t// strings\r\n\t\t\t[/\"([^\"\\\\]|\\\\.)*$/, 'string.invalid' ],  // non-teminated string\r\n\t\t\t[/\"/,  { token: 'string.quote', bracket: '@open', next: '@string' } ],\r\n\r\n\t\t\t// characters\r\n\t\t\t[/'[^\\\\']'/, 'string'],\r\n\t\t\t[/(')(@escapes)(')/, ['string','string.escape','string']],\r\n\t\t\t[/'/, 'string.invalid']\r\n\t\t],\r\n\r\n\t\tqualified: [\r\n\t\t\t[/[a-zA-Z_][\\w]*/, { cases:\r\n\t\t\t\t{ '@keywords': {token:'keyword.$0'},\r\n\t\t\t\t'@default': 'identifier' }\r\n\t\t\t}],\r\n\t\t\t[/\\./, 'delimiter'],\r\n\t\t\t['','','@pop'],\r\n\t\t],\r\n\r\n\t\tnamespace: [\r\n\t\t\t{ include: '@whitespace' },\r\n\t\t\t[/[A-Z]\\w*/, 'namespace'],\r\n\t\t\t[/[\\.=]/, 'delimiter'],\r\n\t\t\t['','','@pop'],\r\n\t\t],\r\n\r\n\t\tcomment: [\r\n\t\t\t[/[^\\/*]+/, 'comment' ],\r\n\t\t\t// [/\\/\\*/,    'comment', '@push' ],    // no nested comments :-(\r\n\t\t\t['\\\\*/',    'comment', '@pop'  ],\r\n\t\t\t[/[\\/*]/,   'comment' ]\r\n\t\t],\r\n\r\n\t\tstring: [\r\n\t\t\t[/[^\\\\\"]+/,  'string'],\r\n\t\t\t[/@escapes/, 'string.escape'],\r\n\t\t\t[/\\\\./,      'string.escape.invalid'],\r\n\t\t\t[/\"/,        { token: 'string.quote', bracket: '@close', next: '@pop' } ]\r\n\t\t],\r\n\r\n\t\tlitstring: [\r\n\t\t\t[/[^\"]+/,    'string'],\r\n\t\t\t[/\"\"/,       'string.escape'],\r\n\t\t\t[/\"/,        { token: 'string.quote', bracket: '@close', next: '@pop' } ]\r\n\t\t],\r\n\r\n\t\tinterpolatedstring: [\r\n\t\t\t[/[^\\\\\"{]+/, 'string'],\r\n\t\t\t[/@escapes/, 'string.escape'],\r\n\t\t\t[/\\\\./,      'string.escape.invalid'],\r\n\t\t\t[/{{/,       'string.escape'],\r\n\t\t\t[/}}/,       'string.escape'],\r\n\t\t\t[/{/,        { token: 'string.quote', bracket: '@open', next: 'root.interpolatedstring' } ],\r\n\t\t\t[/\"/,        { token: 'string.quote', bracket: '@close', next: '@pop' } ]\r\n\t\t],\r\n\r\n\t\twhitespace: [\r\n\t\t\t[/^[ \\t\\v\\f]*#\\w.*$/, 'namespace.cpp' ],\r\n\t\t\t[/[ \\t\\v\\f\\r\\n]+/, ''],\r\n\t\t\t[/\\/\\*/,       'comment', '@comment' ],\r\n\t\t\t[/\\/\\/.*$/,    'comment'],\r\n\t\t],\r\n\t},\r\n};"]}