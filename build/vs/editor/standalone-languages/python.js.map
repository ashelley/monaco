{"version":3,"sources":["fake","file:///home/travis/build/basarat/monaco/vscode/src/vs/editor/standalone-languages/python.ts"],"names":[],"mappings":"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","file":"vs/editor/standalone-languages/python.js","sourcesContent":["}).call(this);","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\nimport IRichLanguageConfiguration = monaco.languages.LanguageConfiguration;\nimport ILanguage = monaco.languages.IMonarchLanguage;\n\nexport var conf:IRichLanguageConfiguration = {\n\tcomments: {\n\t\tlineComment: '#',\n\t\tblockComment: ['\\'\\'\\'', '\\'\\'\\''],\n\t},\n\tbrackets: [['{','}'], ['[',']'], ['(',')']],\n\tautoClosingPairs: [\n\t\t{ open: '\"', close: '\"', notIn: ['string', 'comment'] },\n\t\t{ open: '\\'', close: '\\'', notIn: ['string', 'comment'] },\n\t\t{ open: '{', close: '}', notIn: ['string', 'comment'] },\n\t\t{ open: '[', close: ']', notIn: ['string', 'comment'] },\n\t\t{ open: '(', close: ')', notIn: ['string', 'comment'] },\n\t]\n\t// Cause an automatic indent to occur after lines ending in :.\n\t// enhancedBrackets: [ { open: /.*:\\s*$/,  closeComplete: 'else:' } ],\n};\n\nexport var language = <ILanguage> {\n\tdefaultToken: '',\n\ttokenPostfix: '.python',\n\n\tkeywords: [\n\t\t'and',\n\t\t'as',\n\t\t'assert',\n\t\t'break',\n\t\t'class',\n\t\t'continue',\n\t\t'def',\n\t\t'del',\n\t\t'elif',\n\t\t'else',\n\t\t'except',\n\t\t'exec',\n\t\t'finally',\n\t\t'for',\n\t\t'from',\n\t\t'global',\n\t\t'if',\n\t\t'import',\n\t\t'in',\n\t\t'is',\n\t\t'lambda',\n\t\t'None',\n\t\t'not',\n\t\t'or',\n\t\t'pass',\n\t\t'print',\n\t\t'raise',\n\t\t'return',\n\t\t'self',\n\t\t'try',\n\t\t'while',\n\t\t'with',\n\t\t'yield',\n\n\t\t'int',\n\t\t'float',\n\t\t'long',\n\t\t'complex',\n\t\t'hex',\n\n\t\t'abs',\n\t\t'all',\n\t\t'any',\n\t\t'apply',\n\t\t'basestring',\n\t\t'bin',\n\t\t'bool',\n\t\t'buffer',\n\t\t'bytearray',\n\t\t'callable',\n\t\t'chr',\n\t\t'classmethod',\n\t\t'cmp',\n\t\t'coerce',\n\t\t'compile',\n\t\t'complex',\n\t\t'delattr',\n\t\t'dict',\n\t\t'dir',\n\t\t'divmod',\n\t\t'enumerate',\n\t\t'eval',\n\t\t'execfile',\n\t\t'file',\n\t\t'filter',\n\t\t'format',\n\t\t'frozenset',\n\t\t'getattr',\n\t\t'globals',\n\t\t'hasattr',\n\t\t'hash',\n\t\t'help',\n\t\t'id',\n\t\t'input',\n\t\t'intern',\n\t\t'isinstance',\n\t\t'issubclass',\n\t\t'iter',\n\t\t'len',\n\t\t'locals',\n\t\t'list',\n\t\t'map',\n\t\t'max',\n\t\t'memoryview',\n\t\t'min',\n\t\t'next',\n\t\t'object',\n\t\t'oct',\n\t\t'open',\n\t\t'ord',\n\t\t'pow',\n\t\t'print',\n\t\t'property',\n\t\t'reversed',\n\t\t'range',\n\t\t'raw_input',\n\t\t'reduce',\n\t\t'reload',\n\t\t'repr',\n\t\t'reversed',\n\t\t'round',\n\t\t'set',\n\t\t'setattr',\n\t\t'slice',\n\t\t'sorted',\n\t\t'staticmethod',\n\t\t'str',\n\t\t'sum',\n\t\t'super',\n\t\t'tuple',\n\t\t'type',\n\t\t'unichr',\n\t\t'unicode',\n\t\t'vars',\n\t\t'xrange',\n\t\t'zip',\n\n\t\t'True',\n\t\t'False',\n\n\t\t'__dict__',\n\t\t'__methods__',\n\t\t'__members__',\n\t\t'__class__',\n\t\t'__bases__',\n\t\t'__name__',\n\t\t'__mro__',\n\t\t'__subclasses__',\n\t\t'__init__',\n\t\t'__import__'\n\t],\n\n\tbrackets: [\n\t\t{ open: '{', close: '}', token: 'delimiter.curly' },\n\t\t{ open: '[', close: ']', token: 'delimiter.bracket' },\n\t\t{ open: '(', close: ')', token: 'delimiter.parenthesis' }\n\t],\n\n\ttokenizer: {\n\troot: [\n\t\t\t{ include: '@whitespace' },\n\t\t\t{ include: '@numbers' },\n\t\t\t{ include: '@strings' },\n\n\t\t\t[/[,:;]/, 'delimiter'],\n\t\t\t[/[{}\\[\\]()]/, '@brackets'],\n\n\t\t\t[/@[a-zA-Z]\\w*/, 'tag'],\n\t\t\t[/[a-zA-Z]\\w*/, { cases: { '@keywords': 'keyword',\n\t\t\t\t\t\t\t\t\t\t'@default': 'identifier' } }]\n\t],\n\n\t// Deal with white space, including single and multi-line comments\n\twhitespace: [\n\t\t[/\\s+/, 'white'],\n\t\t[/(^#.*$)/, 'comment'],\n\t\t[/('''.*''')|(\"\"\".*\"\"\")/, 'string'],\n\t\t[/'''.*$/, 'string', '@endDocString'],\n\t\t[/\"\"\".*$/, 'string', '@endDblDocString']\n\t],\n\tendDocString: [\n\t\t[/\\\\'/, 'string'],\n\t\t[/.*'''/, 'string', '@popall'],\n\t\t[/.*$/, 'string']\n\t],\n\tendDblDocString: [\n\t\t[/\\\\\"/, 'string'],\n\t\t[/.*\"\"\"/, 'string', '@popall'],\n\t\t[/.*$/, 'string']\n\t],\n\n\t// Recognize hex, negatives, decimals, imaginaries, longs, and scientific notation\n\tnumbers: [\n\t\t[/-?0x([abcdef]|[ABCDEF]|\\d)+[lL]?/, 'number.hex'],\n\t\t[/-?(\\d*\\.)?\\d+([eE][+\\-]?\\d+)?[jJ]?[lL]?/, 'number']\n\t],\n\n\t// Recognize strings, including those broken across lines with \\ (but not without)\n\tstrings: [\n\t\t[/'$/, 'string.escape', '@popall'],\n\t\t[/'/, 'string.escape', '@stringBody'],\n\t\t[/\"$/, 'string.escape', '@popall'],\n\t\t[/\"/, 'string.escape', '@dblStringBody']\n\t],\n\tstringBody: [\n\t\t[/\\\\./, 'string'],\n\t\t[/'/, 'string.escape', '@popall'],\n\t\t[/.(?=.*')/, 'string'],\n\t\t[/.*\\\\$/, 'string'],\n\t\t[/.*$/, 'string', '@popall']\n\t],\n\tdblStringBody: [\n\t\t[/\\\\./, 'string'],\n\t\t[/\"/, 'string.escape', '@popall'],\n\t\t[/.(?=.*\")/, 'string'],\n\t\t[/.*\\\\$/, 'string'],\n\t\t[/.*$/, 'string', '@popall']\n\t]\n\t}\n};"]}