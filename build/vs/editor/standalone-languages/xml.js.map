{"version":3,"sources":["fake","file:///C:/REPOS/monaco/vscode/src/vs/editor/standalone-languages/xml.ts"],"names":[],"mappings":"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","file":"vs/editor/standalone-languages/xml.js","sourcesContent":["}).call(this);","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n\r\n'use strict';\r\n\r\nimport IRichLanguageConfiguration = monaco.languages.LanguageConfiguration;\r\nimport ILanguage = monaco.languages.IMonarchLanguage;\r\n\r\nexport var conf:IRichLanguageConfiguration = {\r\n\tcomments: {\r\n\t\tblockComment: ['<!--', '-->'],\r\n\t},\r\n\tbrackets: [['{','}'],['[',']'],['(',')'],['<','>']],\r\n\tautoClosingPairs: [\r\n\t\t{ open: '\\'', close: '\\'', notIn: ['string', 'comment'] },\r\n\t\t{ open: '\"', close: '\"', notIn: ['string', 'comment'] },\r\n\t]\r\n\t// enhancedBrackets: [{\r\n\t// \ttokenType: 'tag.tag-$1.xml',\r\n\t// \topenTrigger: '>',\r\n\t// \topen: /<(\\w[\\w\\d]*)([^\\/>]*(?!\\/)>)[^<>]*$/i,\r\n\t// \tcloseComplete: '</$1>',\r\n\t// \tcloseTrigger: '>',\r\n\t// \tclose: /<\\/(\\w[\\w\\d]*)\\s*>$/i\r\n\t// }],\r\n};\r\n\r\nexport var language = <ILanguage> {\r\n\tdefaultToken: '',\r\n\ttokenPostfix: '.xml',\r\n\r\n\tignoreCase: true,\r\n\r\n\t// Useful regular expressions\r\n\tqualifiedName: /(?:[\\w\\.\\-]+:)?[\\w\\.\\-]+/,\r\n\r\n\ttokenizer: {\r\n\t\troot: [\r\n\t\t\t[/[^<&]+/, ''],\r\n\r\n\t\t\t{ include: '@whitespace' },\r\n\r\n\t\t\t// Standard opening tag\r\n\t\t\t[/(<)(@qualifiedName)/, [\r\n\t\t\t\t{ token: 'delimiter.start', bracket: '@open' },\r\n\t\t\t\t{ token: 'tag.tag-$2', bracket: '@open', next: '@tag.$2' }]],\r\n\r\n\t\t\t// Standard closing tag\r\n\t\t\t[/(<\\/)(@qualifiedName)(\\s*)(>)/, [\r\n\t\t\t\t{ token: 'delimiter.end', bracket: '@open' },\r\n\t\t\t\t{ token: 'tag.tag-$2', bracket: '@close' },\r\n\t\t\t\t'',\r\n\t\t\t\t{ token: 'delimiter.end', bracket: '@close' }]],\r\n\r\n\t\t\t// Meta tags - instruction\r\n\t\t\t[/(<\\?)(@qualifiedName)/, [\r\n\t\t\t\t{ token: 'delimiter.start', bracket: '@open' },\r\n\t\t\t\t{ token: 'metatag.instruction', next: '@tag' }]],\r\n\r\n\t\t\t// Meta tags - declaration\r\n\t\t\t[/(<\\!)(@qualifiedName)/, [\r\n\t\t\t\t{ token: 'delimiter.start', bracket: '@open' },\r\n\t\t\t\t{ token: 'metatag.declaration', next: '@tag' }]],\r\n\r\n\t\t\t// CDATA\r\n\t\t\t[/<\\!\\[CDATA\\[/, { token: 'delimiter.cdata', bracket: '@open', next: '@cdata' }],\r\n\r\n\t\t\t[/&\\w+;/, 'string.escape'],\r\n\t\t],\r\n\r\n\t\tcdata: [\r\n\t\t\t[/[^\\]]+/, ''],\r\n\t\t\t[/\\]\\]>/, { token: 'delimiter.cdata', bracket: '@close', next: '@pop' }],\r\n\t\t\t[/\\]/, '']\r\n\t\t],\r\n\r\n\t\ttag: [\r\n\t\t\t[/[ \\t\\r\\n]+/, '' ],\r\n\t\t\t[/(@qualifiedName)(\\s*=\\s*)(\"[^\"]*\"|'[^']*')/, ['attribute.name', '', 'attribute.value']],\r\n\t\t\t[/(@qualifiedName)(\\s*=\\s*)(\"[^\">?\\/]*|'[^'>?\\/]*)(?=[\\?\\/]\\>)/, ['attribute.name', '', 'attribute.value']],\r\n\t\t\t[/(@qualifiedName)(\\s*=\\s*)(\"[^\">]*|'[^'>]*)/, ['attribute.name', '', 'attribute.value']],\r\n\t\t\t[/@qualifiedName/, 'attribute.name'],\r\n\t\t\t[/\\?>/, { token: 'delimiter.start', bracket: '@close', next: '@pop' }],\r\n\t\t\t[/(\\/)(>)/, [\r\n\t\t\t\t{ token: 'tag.tag-$S2', bracket: '@close' },\r\n\t\t\t\t{ token: 'delimiter.start', bracket: '@close', next: '@pop' }]],\r\n\t\t\t[/>/, { token: 'delimiter.start', bracket: '@close', next: '@pop' }],\r\n\t\t],\r\n\r\n\t\twhitespace: [\r\n\t\t\t[/[ \\t\\r\\n]+/, ''],\r\n\t\t\t[/<!--/, { token: 'comment', bracket: '@open', next: '@comment' }]\r\n\t\t],\r\n\r\n\t\tcomment: [\r\n\t\t\t[/[^<\\-]+/, 'comment.content' ],\r\n\t\t\t[/-->/,  { token: 'comment', bracket: '@close', next: '@pop' } ],\r\n\t\t\t[/<!--/, 'comment.content.invalid'],\r\n\t\t\t[/[<\\-]/, 'comment.content' ]\r\n\t\t],\r\n\t},\r\n};"]}