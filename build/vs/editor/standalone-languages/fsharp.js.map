{"version":3,"sources":["fake","file:///C:/REPOS/monaco/vscode/src/vs/editor/standalone-languages/fsharp.ts"],"names":[],"mappings":"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","file":"vs/editor/standalone-languages/fsharp.js","sourcesContent":["}).call(this);","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n\r\n'use strict';\r\n\r\nimport IRichLanguageConfiguration = monaco.languages.LanguageConfiguration;\r\nimport ILanguage = monaco.languages.IMonarchLanguage;\r\n\r\nexport var conf:IRichLanguageConfiguration = {\r\n\tcomments: {\r\n\t\tlineComment: '//',\r\n\t\tblockComment: ['(*', '*)'],\r\n\t},\r\n\tbrackets: [['{','}'], ['[',']'], ['(',')'], ['<','>']],\r\n\tautoClosingPairs: [\r\n\t\t{ open: '{', close: '}', notIn: ['string', 'comment'] },\r\n\t\t{ open: '[', close: ']', notIn: ['string', 'comment'] },\r\n\t\t{ open: '(', close: ')', notIn: ['string', 'comment'] },\r\n\t\t{ open: '\"', close: '\"', notIn: ['string', 'comment'] }\r\n\t]\r\n};\r\n\r\nexport var language = <ILanguage> {\r\n\tdefaultToken: '',\r\n\ttokenPostfix: '.fs',\r\n\r\n\tkeywords: [\r\n\t\t'abstract', 'and', 'atomic', 'as',\r\n\t\t'assert', 'asr', 'base', 'begin',\r\n\t\t'break', 'checked', 'component',\r\n\t\t'const', 'constraint', 'constructor',\r\n\t\t'continue', 'class', 'default',\r\n\t\t'delegate','do', 'done', 'downcast',\r\n\t\t'downto', 'elif', 'else', 'end',\r\n\t\t'exception', 'eager', 'event', 'external',\r\n\t\t'extern',\t'false', 'finally',\t'for',\r\n\t\t'fun',\t'function', 'fixed', 'functor',\r\n\t\t'global', 'if', 'in', 'include', 'inherit',\r\n\t\t'inline', 'interface', 'internal', 'land',\r\n\t\t'lor', 'lsl','lsr', 'lxor', 'lazy', 'let',\r\n\t\t'match', 'member','mod','module', 'mutable',\r\n\t\t'namespace', 'method', 'mixin', 'new', 'not',\r\n\t\t'null', 'of', 'open', 'or', 'object',\r\n\t\t'override', 'private', 'parallel', 'process',\r\n\t\t'protected', 'pure', 'public', 'rec', 'return',\r\n\t\t'static', 'sealed', 'struct', 'sig', 'then',\r\n\t\t'to', 'true', 'tailcall', 'trait',\r\n\t\t'try', 'type', 'upcast', 'use',\r\n\t\t'val', 'void', 'virtual', 'volatile',\r\n\t\t'when', 'while','with', 'yield'\r\n\t],\r\n\r\n\t// we include these common regular expressions\r\n\tsymbols:  /[=><!~?:&|+\\-*\\^%;\\.,\\/]+/,\r\n\tescapes:  /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\r\n\tintegersuffix: /[uU]?[yslnLI]?/,\r\n\tfloatsuffix: /[fFmM]?/,\r\n\r\n\t// The main tokenizer for our languages\r\n\ttokenizer: {\r\n\t\troot: [\r\n\t\t\t// identifiers and keywords\r\n\t\t\t[/[a-zA-Z_]\\w*/, { cases: { '@keywords': {token:'keyword.$0'},\r\n\t\t\t\t\t\t\t\t\t\t'@default': 'identifier' } }],\r\n\r\n\t\t\t// whitespace\r\n\t\t\t{ include: '@whitespace' },\r\n\r\n\t\t\t// [< attributes >].\r\n\t\t\t[/\\[<.*>\\]/, 'annotation'],\r\n\r\n\t\t\t// Preprocessor directive\r\n\t\t\t[/^#(if|else|endif)/, 'keyword'],\r\n\r\n\t\t\t// delimiters and operators\r\n\t\t\t[/[{}()\\[\\]]/, '@brackets'],\r\n\t\t\t[/[<>](?!@symbols)/, '@brackets'],\r\n\t\t\t[/@symbols/, 'delimiter' ],\r\n\r\n\t\t\t// numbers\r\n\t\t\t[/\\d*\\d+[eE]([\\-+]?\\d+)?(@floatsuffix)/, 'number.float'],\r\n\t\t\t[/\\d*\\.\\d+([eE][\\-+]?\\d+)?(@floatsuffix)/, 'number.float'],\r\n\t\t\t[/0x[0-9a-fA-F]+LF/, 'number.float'],\r\n\t\t\t[/0x[0-9a-fA-F]+(@integersuffix)/, 'number.hex'],\r\n\t\t\t[/0b[0-1]+(@integersuffix)/, 'number.bin'],\r\n\t\t\t[/\\d+(@integersuffix)/, 'number'],\r\n\r\n\t\t\t// delimiter: after number because of .\\d floats\r\n\t\t\t[/[;,.]/, 'delimiter'],\r\n\r\n\t\t\t// strings\r\n\t\t\t[/\"([^\"\\\\]|\\\\.)*$/, 'string.invalid' ],  // non-teminated string\r\n\t\t\t[/\"\"\"/, 'string', '@string.\"\"\"'],\r\n\t\t\t[/\"/, 'string', '@string.\"' ],\r\n\r\n\t\t\t// literal string\r\n\t\t\t[/\\@\"/, { token: 'string.quote', bracket: '@open', next: '@litstring' }],\r\n\r\n\t\t\t// characters\r\n\t\t\t[/'[^\\\\']'B?/, 'string'],\r\n\t\t\t[/(')(@escapes)(')/, ['string','string.escape','string']],\r\n\t\t\t[/'/, 'string.invalid']\r\n\t\t],\r\n\r\n\t\twhitespace: [\r\n\t\t\t[/[ \\t\\r\\n]+/, ''],\r\n\t\t\t[/\\(\\*/,       \t\t'comment', '@comment' ],\r\n\t\t\t[/\\/\\/.*$/,    \t\t'comment'],\r\n\t\t],\r\n\r\n\t\tcomment: [\r\n\t\t\t[/[^\\*]+/, 'comment' ],\r\n\t\t\t[/\\*\\)/,    'comment', '@pop'  ],\r\n\t\t\t[/\\*/,   'comment' ]\r\n\t\t],\r\n\r\n\t\tstring: [\r\n\t\t\t[/[^\\\\\"]+/, 'string'],\r\n\t\t\t[/@escapes/, 'string.escape'],\r\n\t\t\t[/\\\\./,      'string.escape.invalid'],\r\n\t\t\t[/(\"\"\"|\"B?)/,     { cases: { '$#==$S2' : { token: 'string', next: '@pop' },\r\n\t\t\t\t\t\t\t\t\t'@default': 'string' }} ]\r\n\t\t],\r\n\r\n\t\tlitstring: [\r\n\t\t\t[/[^\"]+/,    'string'],\r\n\t\t\t[/\"\"/,       'string.escape'],\r\n\t\t\t[/\"/,        { token: 'string.quote', bracket: '@close', next: '@pop' } ]\r\n\t\t],\r\n\t},\r\n};"]}