{"version":3,"sources":["fake","file:///C:/REPOS/monaco/vscode/src/vs/editor/standalone-languages/java.ts"],"names":[],"mappings":"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","file":"vs/editor/standalone-languages/java.js","sourcesContent":["}).call(this);","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n\r\n'use strict';\r\n\r\nimport IRichLanguageConfiguration = monaco.languages.LanguageConfiguration;\r\nimport ILanguage = monaco.languages.IMonarchLanguage;\r\n\r\nexport var conf:IRichLanguageConfiguration = {\r\n\t// the default separators except `@$`\r\n\twordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\#\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g,\r\n\tcomments: {\r\n\t\tlineComment: '//',\r\n\t\tblockComment: ['/*', '*/'],\r\n\t},\r\n\tbrackets: [['{','}'], ['[',']'], ['(',')'], ['<','>']],\r\n\tautoClosingPairs: [\r\n\t\t{ open: '\"', close: '\"', notIn: ['string', 'comment'] },\r\n\t\t{ open: '\\'', close: '\\'', notIn: ['string', 'comment'] },\r\n\t\t{ open: '{', close: '}', notIn: ['string', 'comment'] },\r\n\t\t{ open: '[', close: ']', notIn: ['string', 'comment'] },\r\n\t\t{ open: '(', close: ')', notIn: ['string', 'comment'] },\r\n\t\t{ open: '<', close: '>', notIn: ['string', 'comment'] },\r\n\t]\r\n};\r\n\r\nexport var language = <ILanguage> {\r\n\tdefaultToken: '',\r\n\ttokenPostfix: '.java',\r\n\r\n\tkeywords: [\r\n\t\t'abstract', 'continue', 'for', 'new', 'switch', 'assert', 'default',\r\n\t\t'goto', 'package', 'synchronized', 'boolean', 'do', 'if', 'private',\r\n\t\t'this', 'break', 'double', 'implements', 'protected', 'throw', 'byte',\r\n\t\t'else', 'import', 'public', 'throws', 'case', 'enum', 'instanceof', 'return',\r\n\t\t'transient', 'catch', 'extends', 'int', 'short', 'try', 'char', 'final',\r\n\t\t'interface', 'static', 'void', 'class', 'finally', 'long', 'strictfp',\r\n\t\t'volatile', 'const', 'float', 'native', 'super', 'while', 'true', 'false'\r\n\t],\r\n\r\n\toperators: [\r\n\t\t'=', '>', '<', '!', '~', '?', ':',\r\n\t\t'==', '<=', '>=', '!=', '&&', '||', '++', '--',\r\n\t\t'+', '-', '*', '/', '&', '|', '^', '%', '<<',\r\n\t\t'>>', '>>>', '+=', '-=', '*=', '/=', '&=', '|=',\r\n\t\t'^=', '%=', '<<=', '>>=', '>>>='\r\n\t],\r\n\r\n\t// we include these common regular expressions\r\n\tsymbols:  /[=><!~?:&|+\\-*\\/\\^%]+/,\r\n\tescapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\r\n\tdigits: /\\d+(_+\\d+)*/,\r\n\toctaldigits: /[0-7]+(_+[0-7]+)*/,\r\n\tbinarydigits: /[0-1]+(_+[0-1]+)*/,\r\n\thexdigits: /[[0-9a-fA-F]+(_+[0-9a-fA-F]+)*/,\r\n\r\n\t// The main tokenizer for our languages\r\n\ttokenizer: {\r\n\t\troot: [\r\n\t\t\t// identifiers and keywords\r\n\t\t\t[/[a-zA-Z_$][\\w$]*/, { cases: { '@keywords': {token:'keyword.$0'},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'@default': 'identifier' } }],\r\n\r\n\t\t\t// whitespace\r\n\t\t\t{ include: '@whitespace' },\r\n\r\n\t\t\t// delimiters and operators\r\n\t\t\t[/[{}()\\[\\]]/, '@brackets'],\r\n\t\t\t[/[<>](?!@symbols)/, '@brackets'],\r\n\t\t\t[/@symbols/, { cases: { '@operators': 'delimiter',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'@default'  : '' } } ],\r\n\r\n\t\t\t// @ annotations.\r\n\t\t\t[/@\\s*[a-zA-Z_\\$][\\w\\$]*/, 'annotation'],\r\n\r\n\t\t\t// numbers\r\n\t\t\t[/(@digits)[eE]([\\-+]?(@digits))?[fFdD]?/, 'number.float'],\r\n\t\t\t[/(@digits)\\.(@digits)([eE][\\-+]?(@digits))?[fFdD]?/, 'number.float'],\r\n\t\t\t[/0[xX](@hexdigits)[Ll]?/, 'number.hex'],\r\n\t\t\t[/0(@octaldigits)[Ll]?/, 'number.octal'],\r\n\t\t\t[/0[bB](@binarydigits)[Ll]?/, 'number.binary'],\r\n\t\t\t[/(@digits)[fFdD]/, 'number.float'],\r\n\t\t\t[/(@digits)[lL]?/, 'number'],\r\n\r\n\t\t\t// delimiter: after number because of .\\d floats\r\n\t\t\t[/[;,.]/, 'delimiter'],\r\n\r\n\t\t\t// strings\r\n\t\t\t[/\"([^\"\\\\]|\\\\.)*$/, 'string.invalid' ],  // non-teminated string\r\n\t\t\t[/\"/,  'string', '@string' ],\r\n\r\n\t\t\t// characters\r\n\t\t\t[/'[^\\\\']'/, 'string'],\r\n\t\t\t[/(')(@escapes)(')/, ['string','string.escape','string']],\r\n\t\t\t[/'/, 'string.invalid']\r\n\t\t],\r\n\r\n\t\twhitespace: [\r\n\t\t\t[/[ \\t\\r\\n]+/, ''],\r\n\t\t\t[/\\/\\*\\*(?!\\/)/,  'comment.doc', '@javadoc' ],\r\n\t\t\t[/\\/\\*/,       \t\t'comment', '@comment' ],\r\n\t\t\t[/\\/\\/.*$/,    \t\t'comment'],\r\n\t\t],\r\n\r\n\t\tcomment: [\r\n\t\t\t[/[^\\/*]+/, 'comment' ],\r\n\t\t\t// [/\\/\\*/, 'comment', '@push' ],    // nested comment not allowed :-(\r\n\t\t\t// [/\\/\\*/,    'comment.invalid' ],    // this breaks block comments in the shape of /* //*/\r\n\t\t\t[/\\*\\//,    'comment', '@pop'  ],\r\n\t\t\t[/[\\/*]/,   'comment' ]\r\n\t\t],\r\n\t\t//Identical copy of comment above, except for the addition of .doc\r\n\t\tjavadoc: [\r\n\t\t\t[/[^\\/*]+/, 'comment.doc' ],\r\n\t\t\t// [/\\/\\*/, 'comment.doc', '@push' ],    // nested comment not allowed :-(\r\n\t\t\t[/\\/\\*/,    'comment.doc.invalid' ],\r\n\t\t\t[/\\*\\//,    'comment.doc', '@pop'  ],\r\n\t\t\t[/[\\/*]/,   'comment.doc' ]\r\n\t\t],\r\n\r\n\t\tstring: [\r\n\t\t\t[/[^\\\\\"]+/,  'string'],\r\n\t\t\t[/@escapes/, 'string.escape'],\r\n\t\t\t[/\\\\./,      'string.escape.invalid'],\r\n\t\t\t[/\"/,        'string', '@pop' ]\r\n\t\t],\r\n\t},\r\n};"]}