{"version":3,"sources":["fake","file:///C:/REPOS/monaco/vscode/src/vs/editor/standalone-languages/coffee.ts"],"names":[],"mappings":"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","file":"vs/editor/standalone-languages/coffee.js","sourcesContent":["}).call(this);","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n\r\n'use strict';\r\n\r\nimport IRichLanguageConfiguration = monaco.languages.LanguageConfiguration;\r\nimport ILanguage = monaco.languages.IMonarchLanguage;\r\n\r\nexport var conf:IRichLanguageConfiguration = {\r\n\twordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\#%\\^\\&\\*\\(\\)\\=\\$\\-\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g,\r\n\tcomments: {\r\n\t\tblockComment: ['###', '###'],\r\n\t\tlineComment: '#'\r\n\t},\r\n\tbrackets: [['{','}'], ['[',']'], ['(',')']],\r\n\tautoClosingPairs: [\r\n\t\t{ open: '\"', close: '\"', notIn: ['string', 'comment'] },\r\n\t\t{ open: '\\'', close: '\\'', notIn: ['string', 'comment'] },\r\n\t\t{ open: '{', close: '}', notIn: ['string', 'comment'] },\r\n\t\t{ open: '[', close: ']', notIn: ['string', 'comment'] },\r\n\t\t{ open: '(', close: ')', notIn: ['string', 'comment'] },\r\n\t]\r\n\t// enhancedBrackets: [\r\n\t// \t\t{ open: /for$/ }, { open: /while$/ },\t{ open: /loop$/ }, { open: /if$/ }, { open: /unless$/ },\r\n\t// \t\t{ open: /else$/ }, { open: /switch$/ }, { open: /try$/ }, { open: /catch$/ }, { open: /finally$/ },\r\n\t// \t\t{ open: /class$/ }, { open: /->$/ }\r\n\t// \t],\r\n};\r\n\r\nexport var language = <ILanguage> {\r\n\tdefaultToken: '',\r\n\tignoreCase: true,\r\n\ttokenPostfix: '.coffee',\r\n\r\n\tbrackets: [\r\n\t\t{ open:'{', close:'}', token:'delimiter.curly'},\r\n\t\t{ open:'[', close:']', token:'delimiter.square'},\r\n\t\t{ open:'(', close:')', token:'delimiter.parenthesis'}\r\n\t],\r\n\r\n\tregEx: /\\/(?!\\/\\/)(?:[^\\/\\\\]|\\\\.)*\\/[igm]*/,\r\n\r\n\tkeywords: [\r\n\t\t'and', 'or', 'is', 'isnt', 'not', 'on', 'yes', '@', 'no', 'off',\r\n\t\t'true', 'false', 'null', 'this',\r\n\t\t'new', 'delete', 'typeof', 'in', 'instanceof',\r\n\t\t'return', 'throw', 'break', 'continue', 'debugger',\r\n\t\t'if', 'else', 'switch', 'for', 'while', 'do', 'try', 'catch', 'finally',\r\n\t\t'class', 'extends', 'super',\r\n\t\t'undefined', 'then', 'unless', 'until', 'loop', 'of', 'by', 'when'\r\n\t\t],\r\n\r\n\t// we include these common regular expressions\r\n\tsymbols:  /[=><!~?&%|+\\-*\\/\\^\\.,\\:]+/,\r\n\tescapes:  /\\\\(?:[abfnrtv\\\\\"'$]|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\r\n\r\n\t// The main tokenizer for our languages\r\n\ttokenizer: {\r\n\t\troot: [\r\n\r\n\t\t\t// identifiers and keywords\r\n\t\t\t[/\\@[a-zA-Z_]\\w*/, 'variable.predefined'],\r\n\t\t\t[/[a-zA-Z_]\\w*/, { cases: {\r\n\t\t\t\t'this': 'variable.predefined',\r\n\t\t\t\t'@keywords': { token: 'keyword.$0' },\r\n\t\t\t\t'@default': ''\r\n\t\t\t\t}\r\n\t\t\t}],\r\n\r\n\t\t\t// whitespace\r\n\t\t\t[/[ \\t\\r\\n]+/, ''],\r\n\r\n\t\t\t// Comments\r\n\t\t\t[/###/, 'comment', '@comment'],\r\n\t\t\t[/#.*$/, 'comment'],\r\n\r\n\t\t\t// regular expressions\r\n\t\t\t['///', { token: 'regexp', next: '@hereregexp' }],\r\n\r\n\t\t\t[/^(\\s*)(@regEx)/, ['', 'regexp']],\r\n\t\t\t[/(\\()(\\s*)(@regEx)/, ['@brackets', '', 'regexp']],\r\n\t\t\t[/(\\,)(\\s*)(@regEx)/, ['delimiter', '', 'regexp']],\r\n\t\t\t[/(\\=)(\\s*)(@regEx)/, ['delimiter', '', 'regexp']],\r\n\t\t\t[/(\\:)(\\s*)(@regEx)/, ['delimiter', '', 'regexp']],\r\n\t\t\t[/(\\[)(\\s*)(@regEx)/, ['@brackets', '', 'regexp']],\r\n\t\t\t[/(\\!)(\\s*)(@regEx)/, ['delimiter', '', 'regexp']],\r\n\t\t\t[/(\\&)(\\s*)(@regEx)/, ['delimiter', '', 'regexp']],\r\n\t\t\t[/(\\|)(\\s*)(@regEx)/, ['delimiter', '', 'regexp']],\r\n\t\t\t[/(\\?)(\\s*)(@regEx)/, ['delimiter', '', 'regexp']],\r\n\t\t\t[/(\\{)(\\s*)(@regEx)/, ['@brackets', '', 'regexp']],\r\n\t\t\t[/(\\;)(\\s*)(@regEx)/, ['', '', 'regexp']],\r\n\r\n\r\n\t\t\t// delimiters\r\n\t\t\t[/}/, { cases: {\r\n\t\t\t\t\t'$S2==interpolatedstring' : { token: 'string', next: '@pop' }\r\n\t\t\t\t\t,\t'@default'   : '@brackets' } }],\r\n\t\t\t[/[{}()\\[\\]]/, '@brackets'],\r\n\t\t\t[/@symbols/, 'delimiter'],\r\n\r\n\t\t\t// numbers\r\n\t\t\t[/\\d+[eE]([\\-+]?\\d+)?/, 'number.float'],\r\n\t\t\t[/\\d+\\.\\d+([eE][\\-+]?\\d+)?/, 'number.float'],\r\n\t\t\t[/0[xX][0-9a-fA-F]+/, 'number.hex'],\r\n\t\t\t[/0[0-7]+(?!\\d)/, 'number.octal'],\r\n\t\t\t[/\\d+/, 'number'],\r\n\r\n\t\t\t// delimiter: after number because of .\\d floats\r\n\t\t\t[/[,.]/, 'delimiter'],\r\n\r\n\t\t\t// strings:\r\n\t\t\t[/\"\"\"/, 'string', '@herestring.\"\"\"'],\r\n\t\t\t[/'''/,  'string', '@herestring.\\'\\'\\''],\r\n\t\t\t[/\"/,  { cases: { '@eos': 'string', '@default': {token:'string', next:'@string.\"'} }} ],\r\n\t\t\t[/'/, { cases: { '@eos': 'string', '@default': {token:'string', next:'@string.\\''} }} ],\r\n\t\t],\r\n\r\n\t\tstring: [\r\n\t\t\t[/[^\"'\\#\\\\]+/, 'string'],\r\n\t\t\t[/@escapes/, 'string.escape'],\r\n\t\t\t[/\\./, 'string.escape.invalid'],\r\n\t\t\t[/\\./, 'string.escape.invalid'],\r\n\r\n\t\t\t[/#{/,  { cases: { '$S2==\"': { token: 'string', next: 'root.interpolatedstring' }, '@default': 'string' }}],\r\n\r\n\t\t\t[/[\"']/,     { cases: { '$#==$S2' : { token: 'string', next: '@pop' }, '@default': 'string' }} ],\r\n\t\t\t[/#/, 'string']\r\n\t\t],\r\n\r\n\t\therestring: [\r\n\t\t\t[/(\"\"\"|''')/, { cases: { '$1==$S2': { token: 'string', next: '@pop' }, '@default': 'string' } }],\r\n\t\t\t[/[^#\\\\'\"]+/,'string' ],\r\n\t\t\t[/['\"]+/,'string' ],\r\n\t\t\t[/@escapes/, 'string.escape'],\r\n\t\t\t[/\\./, 'string.escape.invalid'],\r\n\r\n\t\t\t[/#{/, { token: 'string.quote', bracket: '@open', next: 'root.interpolatedstring' } ],\r\n\t\t\t[/#/, 'string']\r\n\t\t],\r\n\r\n\t\tcomment: [\r\n\t\t\t[/[^#]+/, 'comment', ],\r\n\t\t\t[/###/, 'comment', '@pop'],\r\n\t\t\t[/#/, 'comment' ],\r\n\t\t],\r\n\r\n\t\thereregexp: [\r\n\t\t\t[/[^\\\\\\/#]/, 'regexp'],\r\n\t\t\t[/\\\\./, 'regexp'],\r\n\t\t\t[/#.*$/, 'comment'],\r\n\t\t\t['///[igm]*', { token: 'regexp', next: '@pop' }],\r\n\t\t\t[/\\//, 'regexp'],\r\n\t\t],\r\n\t},\r\n};"]}