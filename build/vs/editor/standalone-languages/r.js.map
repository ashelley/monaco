{"version":3,"sources":["fake","file:///home/travis/build/basarat/monaco/vscode/src/vs/editor/standalone-languages/r.ts"],"names":[],"mappings":"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","file":"vs/editor/standalone-languages/r.js","sourcesContent":["}).call(this);","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\nimport IRichLanguageConfiguration = monaco.languages.LanguageConfiguration;\nimport ILanguage = monaco.languages.IMonarchLanguage;\n\nexport var conf:IRichLanguageConfiguration = {\n\tcomments: {\n\t\tlineComment: '#'\n\t},\n\tbrackets: [['{','}'], ['[',']'], ['(',')']],\n\tautoClosingPairs: [\n\t\t{ open: '\"', close: '\"', notIn: ['string', 'comment'] },\n\t\t{ open: '\\'', close: '\\'', notIn: ['string', 'comment'] },\n\t\t{ open: '{', close: '}', notIn: ['string', 'comment'] },\n\t\t{ open: '[', close: ']', notIn: ['string', 'comment'] },\n\t\t{ open: '(', close: ')', notIn: ['string', 'comment'] },\n\t]\n};\n\nexport var language = <ILanguage> {\n\tdefaultToken: '',\n\ttokenPostfix: '.r',\n\n\troxygen: [\n\t\t'@param',\n\t\t'@return',\n\t\t'@name',\n\t\t'@rdname',\n\t\t'@examples',\n\t\t'@include',\n\t\t'@docType',\n\t\t'@S3method',\n\t\t'@TODO',\n\t\t'@aliases',\n\t\t'@alias',\n\t\t'@assignee',\n\t\t'@author',\n\t\t'@callGraphDepth',\n\t\t'@callGraph',\n\t\t'@callGraphPrimitives',\n\t\t'@concept',\n\t\t'@exportClass',\n\t\t'@exportMethod',\n\t\t'@exportPattern',\n\t\t'@export',\n\t\t'@formals',\n\t\t'@format',\n\t\t'@importClassesFrom',\n\t\t'@importFrom',\n\t\t'@importMethodsFrom',\n\t\t'@import',\n\t\t'@keywords',\n\t\t'@method',\n\t\t'@nord',\n\t\t'@note',\n\t\t'@references',\n\t\t'@seealso',\n\t\t'@setClass',\n\t\t'@slot',\n\t\t'@source',\n\t\t'@title',\n\t\t'@usage'\n\t],\n\n\tconstants: [\n\t\t'NULL',\n\t\t'FALSE',\n\t\t'TRUE',\n\t\t'NA',\n\t\t'Inf',\n\t\t'NaN ',\n\t\t'NA_integer_',\n\t\t'NA_real_',\n\t\t'NA_complex_',\n\t\t'NA_character_ ',\n\t\t'T',\n\t\t'F',\n\t\t'LETTERS',\n\t\t'letters',\n\t\t'month.abb',\n\t\t'month.name',\n\t\t'pi',\n\t\t'R.version.string'\n\t],\n\n\tkeywords: [\n\t\t'break',\n\t\t'next',\n\t\t'return',\n\t\t'if',\n\t\t'else',\n\t\t'for',\n\t\t'in',\n\t\t'repeat',\n\t\t'while',\n\t\t'array',\n\t\t'category',\n\t\t'character',\n\t\t'complex',\n\t\t'double',\n\t\t'function',\n\t\t'integer',\n\t\t'list',\n\t\t'logical',\n\t\t'matrix',\n\t\t'numeric',\n\t\t'vector',\n\t\t'data.frame',\n\t\t'factor',\n\t\t'library',\n\t\t'require',\n\t\t'attach',\n\t\t'detach',\n\t\t'source'\n\t],\n\n\tspecial: [\n\t\t'\\\\n',\n\t\t'\\\\r',\n\t\t'\\\\t',\n\t\t'\\\\b',\n\t\t'\\\\a',\n\t\t'\\\\f',\n\t\t'\\\\v',\n\t\t'\\\\\\'',\n\t\t'\\\\\"',\n\t\t'\\\\\\\\'\n\t],\n\n\tbrackets: [\n\t\t{ open: '{', close: '}', token: 'delimiter.curly' },\n\t\t{ open: '[', close: ']', token: 'delimiter.bracket' },\n\t\t{ open: '(', close: ')', token: 'delimiter.parenthesis' }\n\t],\n\n\ttokenizer: {\n\t\troot: [\n\t\t\t{ include: '@numbers' },\n\t\t\t{ include: '@strings' },\n\n\t\t\t[/[{}\\[\\]()]/, '@brackets'],\n\n\t\t\t{ include: '@operators' },\n\n\t\t\t[/#'/, 'comment.doc', '@roxygen'],\n\t\t\t[/(^#.*$)/, 'comment'],\n\n\t\t\t[/\\s+/, 'white'],\n\n\t\t\t[/[,:;]/, 'delimiter'],\n\n\t\t\t[/@[a-zA-Z]\\w*/, 'tag'],\n\t\t\t[/[a-zA-Z]\\w*/, {\n\t\t\t\tcases: {\n\t\t\t\t\t'@keywords': 'keyword',\n\t\t\t\t\t'@constants': 'constant',\n\t\t\t\t\t'@default': 'identifier'\n\t\t\t\t}\n\t\t\t}]\n\t\t],\n\n\t\t// Recognize Roxygen comments\n\t\troxygen: [\n\t\t\t[/@\\w+/, {\n\t\t\t\tcases: {\n\t\t\t\t\t'@roxygen': 'tag',\n\t\t\t\t\t'@eos': { token: 'comment.doc', next: '@pop' },\n\t\t\t\t\t'@default': 'comment.doc'\n\t\t\t\t}\n\t\t\t}],\n\t\t\t[/\\s+/, {\n\t\t\t\tcases: {\n\t\t\t\t\t'@eos': { token: 'comment.doc', next: '@pop' },\n\t\t\t\t\t'@default': 'comment.doc'\n\t\t\t\t}\n\t\t\t}],\n\t\t\t[/.*/, { token: 'comment.doc', next: '@pop' }]\n\t\t],\n\n\t\t// Recognize positives, negatives, decimals, imaginaries, and scientific notation\n\t\tnumbers: [\n\t\t\t[/-?(\\d*\\.)?\\d+([eE][+\\-]?\\d+)?/, 'number']\n\t\t],\n\n\t\t// Recognize operators\n\t\toperators: [\n\t\t\t[/<{1,2}-/, 'operator'],\n\t\t\t[/->{1,2}/, 'operator'],\n\t\t\t[/%[^%\\s]+%/, 'operator'],\n\t\t\t[/\\*\\*/, 'operator'],\n\t\t\t[/%%/, 'operator'],\n\t\t\t[/&&/, 'operator'],\n\t\t\t[/\\|\\|/, 'operator'],\n\t\t\t[/<</, 'operator'],\n\t\t\t[/>>/, 'operator'],\n\t\t\t[/[-+=&|!<>^~*/:$]/, 'operator']\n\t\t],\n\n\t\t// Recognize strings, including those broken across lines\n\t\tstrings: [\n\t\t\t[/'/, 'string.escape', '@stringBody'],\n\t\t\t[/\"/, 'string.escape', '@dblStringBody']\n\t\t],\n\t\tstringBody: [\n\t\t\t[/\\\\./, {\n\t\t\t\tcases: {\n\t\t\t\t\t'@special': 'string',\n\t\t\t\t\t'@default': 'error-token'\n\t\t\t\t}\n\t\t\t}],\n\t\t\t[/'/, 'string.escape', '@popall'],\n\t\t\t[/./, 'string'],\n\t\t],\n\t\tdblStringBody: [\n\t\t\t[/\\\\./, {\n\t\t\t\tcases: {\n\t\t\t\t\t'@special': 'string',\n\t\t\t\t\t'@default': 'error-token'\n\t\t\t\t}\n\t\t\t}],\n\t\t\t[/\"/, 'string.escape', '@popall'],\n\t\t\t[/./, 'string'],\n\t\t]\n\t}\n};"]}