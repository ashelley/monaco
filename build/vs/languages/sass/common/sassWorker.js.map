{"version":3,"sources":["fake","file:///D:/REPOS/monaco/vscode/src/vs/languages/sass/common/parser/sassScanner.ts","file:///D:/REPOS/monaco/vscode/src/vs/languages/sass/common/parser/sassErrors.ts","file:///D:/REPOS/monaco/vscode/src/vs/languages/sass/common/parser/sassParser.ts","file:///D:/REPOS/monaco/vscode/src/vs/languages/sass/common/services/intelliSense.ts","file:///D:/REPOS/monaco/vscode/src/vs/languages/sass/common/sassWorker.ts"],"names":[],"mappings":"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","file":"vs/languages/sass/common/sassWorker.js","sourcesContent":["}).call(this);","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\n\r\nimport scanner = require('vs/languages/css/common/parser/cssScanner');\r\n\r\nconst _FSL = '/'.charCodeAt(0);\r\nconst _NWL = '\\n'.charCodeAt(0);\r\nconst _CAR = '\\r'.charCodeAt(0);\r\nconst _LFD = '\\f'.charCodeAt(0);\r\n\r\nconst _DLR = '$'.charCodeAt(0);\r\nconst _HSH = '#'.charCodeAt(0);\r\nconst _CUL = '{'.charCodeAt(0);\r\nconst _EQS = '='.charCodeAt(0);\r\nconst _BNG = '!'.charCodeAt(0);\r\nconst _LAN = '<'.charCodeAt(0);\r\nconst _RAN = '>'.charCodeAt(0);\r\nconst _DOT = '.'.charCodeAt(0);\r\n\r\nlet customTokenValue = scanner.TokenType.CustomToken;\r\n\r\nexport const VariableName = customTokenValue++;\r\nexport const InterpolationFunction: scanner.TokenType = customTokenValue++;\r\nexport const Default: scanner.TokenType = customTokenValue++;\r\nexport const EqualsOperator: scanner.TokenType = customTokenValue++;\r\nexport const NotEqualsOperator: scanner.TokenType = customTokenValue++;\r\nexport const GreaterEqualsOperator: scanner.TokenType = customTokenValue++;\r\nexport const SmallerEqualsOperator: scanner.TokenType = customTokenValue++;\r\nexport const Ellipsis: scanner.TokenType = customTokenValue++;\r\n\r\nexport class SassScanner extends scanner.Scanner {\r\n\r\n\tpublic scan(): scanner.IToken {\r\n\r\n\t\t// processes all whitespaces and comments\r\n\t\tconst triviaToken = this.trivia();\r\n\t\tif (triviaToken !== null) {\r\n\t\t\treturn triviaToken;\r\n\t\t}\r\n\r\n\t\tconst offset = this.stream.pos();\r\n\r\n\t\t// sass variable\r\n\t\tif (this.stream.advanceIfChar(_DLR)) {\r\n\t\t\tconst content = [ '$' ];\r\n\t\t\tif (this.ident(content)) {\r\n\t\t\t\treturn this.finishToken(offset, VariableName, content.join(''));\r\n\t\t\t} else {\r\n\t\t\t\tthis.stream.goBackTo(offset);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Sass: interpolation function #{..})\r\n\t\tif (this.stream.advanceIfChars([_HSH, _CUL])) {\r\n\t\t\treturn this.finishToken(offset, InterpolationFunction);\r\n\t\t}\r\n\r\n\t\t// operator ==\r\n\t\tif (this.stream.advanceIfChars([_EQS, _EQS])) {\r\n\t\t\treturn this.finishToken(offset, EqualsOperator);\r\n\t\t}\r\n\r\n\t\t// operator !=\r\n\t\tif (this.stream.advanceIfChars([_BNG, _EQS])) {\r\n\t\t\treturn this.finishToken(offset, NotEqualsOperator);\r\n\t\t}\r\n\r\n\t\t// operators <, <=\r\n\t\tif (this.stream.advanceIfChar(_LAN)) {\r\n\t\t\tif (this.stream.advanceIfChar(_EQS)) {\r\n\t\t\t\treturn this.finishToken(offset, SmallerEqualsOperator);\r\n\t\t\t}\r\n\t\t\treturn this.finishToken(offset, scanner.TokenType.Delim);\r\n\t\t}\r\n\r\n\t\t// ooperators >, >=\r\n\t\tif (this.stream.advanceIfChar(_RAN)) {\r\n\t\t\tif (this.stream.advanceIfChar(_EQS)) {\r\n\t\t\t\treturn this.finishToken(offset, GreaterEqualsOperator);\r\n\t\t\t}\r\n\t\t\treturn this.finishToken(offset, scanner.TokenType.Delim);\r\n\t\t}\r\n\r\n\t\t// ellipis\r\n\t\tif (this.stream.advanceIfChars([_DOT, _DOT, _DOT])) {\r\n\t\t\treturn this.finishToken(offset, Ellipsis);\r\n\t}\r\n\r\n\t\treturn super.scan();\r\n\t}\r\n\r\n\tprotected comment():boolean {\r\n\t\tif (super.comment()) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tif (this.stream.advanceIfChars([_FSL, _FSL])) {\r\n\t\t\tthis.stream.advanceWhileChar((ch:number) => {\r\n\t\t\t\tswitch(ch) {\r\n\t\t\t\t\tcase _NWL:\r\n\t\t\t\t\tcase _CAR:\r\n\t\t\t\t\tcase _LFD:\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n}","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\n\r\nimport nls = require('vs/nls');\r\nimport nodes = require('vs/languages/css/common/parser/cssNodes');\r\n\r\nexport class SassIssueType implements nodes.IRule {\r\n\tid: string;\r\n\tmessage: string;\r\n\r\n\tpublic constructor(id:string, message: string) {\r\n\t\tthis.id = id;\r\n\t\tthis.message = message;\r\n\t}\r\n}\r\n\r\nexport var ParseError = {\r\n\tFromExpected: new SassIssueType('sass-fromexpected', nls.localize('expected.from', \"'from' expected\")),\r\n\tThroughOrToExpected: new SassIssueType('sass-throughexpected', nls.localize('expected.through', \"'through' or 'to' expected\")),\r\n\tInExpected: new SassIssueType('sass-fromexpected', nls.localize('expected.in', \"'in' expected\")),\r\n};\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nimport sassScanner = require ('./sassScanner');\r\nimport sassErrors = require('./sassErrors');\r\nimport scanner = require('vs/languages/css/common/parser/cssScanner');\r\nimport cssParser = require('vs/languages/css/common/parser/cssParser');\r\nimport nodes = require('vs/languages/css/common/parser/cssNodes');\r\nimport errors = require('vs/languages/css/common/parser/cssErrors');\r\n\r\n/// <summary>\r\n/// A parser for Sass\r\n/// http://sass-lang.com/documentation/file.SASS_REFERENCE.html\r\n/// </summary>\r\nexport class SassParser extends cssParser.Parser {\r\n\r\n\tpublic constructor() {\r\n\t\tsuper(new sassScanner.SassScanner());\r\n\t}\r\n\r\n\tpublic _parseStylesheetStatement():nodes.Node {\r\n\t\treturn super._parseStylesheetStatement()\r\n\t\t\t|| this._parseVariableDeclaration()\r\n\t\t\t|| this._parseWarnAndDebug()\r\n\t\t\t|| this._parseControlStatement()\r\n\t\t\t|| this._parseMixinDeclaration()\r\n\t\t\t|| this._parseMixinContent()\r\n\t\t\t|| this._parseMixinReference() // @include\r\n\t\t\t|| this._parseFunctionDeclaration();\r\n\t}\r\n\r\n\tpublic _parseImport():nodes.Node {\r\n\t\tvar node = <nodes.Import> this.create(nodes.Import);\r\n\t\tif(!this.accept(scanner.TokenType.AtKeyword, '@import')) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\tif (!this.accept(scanner.TokenType.URI) && !this.accept(scanner.TokenType.String)) {\r\n\t\t\treturn this.finish(node, errors.ParseError.URIOrStringExpected);\r\n\t\t}\r\n\t\twhile (this.accept(scanner.TokenType.Comma)) {\r\n\t\t\tif (!this.accept(scanner.TokenType.URI) && !this.accept(scanner.TokenType.String)) {\r\n\t\t\t\treturn this.finish(node, errors.ParseError.URIOrStringExpected);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tnode.setMedialist(this._parseMediaList());\r\n\r\n\t\treturn this.finish(node);\r\n\t}\r\n\r\n\t// Sass variables: $font-size: 12px;\r\n\tpublic _parseVariableDeclaration(panic:scanner.TokenType[]=[]): nodes.VariableDeclaration {\r\n\t\tvar node = <nodes.VariableDeclaration> this.create(nodes.VariableDeclaration);\r\n\r\n\t\tif (!node.setVariable(this._parseVariable())) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\tif (!this.accept(scanner.TokenType.Colon, ':')) {\r\n\t\t\treturn this.finish(node, errors.ParseError.ColonExpected);\r\n\t\t}\r\n\t\tnode.colonPosition = this.prevToken.offset;\r\n\r\n\t\tif (!node.setValue(this._parseExpr())) {\r\n\t\t\treturn this.finish(node, errors.ParseError.VariableValueExpected, [], panic);\r\n\t\t}\r\n\r\n\t\tif (this.accept(scanner.TokenType.Exclamation)) {\r\n\t\t\tif (!this.accept(scanner.TokenType.Ident, 'default', true)) {\r\n\t\t\t\treturn this.finish(node, errors.ParseError.UnknownKeyword);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this.peek(scanner.TokenType.SemiColon)) {\r\n\t\t\tnode.semicolonPosition = this.token.offset; // not part of the declaration, but useful information for code assist\r\n\t\t}\r\n\r\n\t\treturn this.finish(node);\r\n\t}\r\n\r\n\tpublic _parseMediaFeatureName() : nodes.Node {\r\n\t\treturn this._parseFunction() || this._parseIdent() || this._parseVariable(); // first function, the indent\r\n\t}\r\n\r\n\tpublic _parseKeyframeSelector():nodes.Node {\r\n\t\treturn super._parseKeyframeSelector() || this._parseMixinContent();\r\n\t}\r\n\r\n\tpublic _parseVariable(): nodes.Variable {\r\n\t\tvar node = <nodes.Variable> this.create(nodes.Variable);\r\n\t\tif (!this.accept(sassScanner.VariableName)) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\treturn <nodes.Variable> node;\r\n\t}\r\n\r\n\tpublic _parseIdent(referenceTypes?: nodes.ReferenceType[]): nodes.Identifier {\r\n\t\tvar node = <nodes.Identifier> this.create(nodes.Identifier);\r\n\t\tnode.referenceTypes = referenceTypes;\r\n\t\tvar hasContent = false;\r\n\t\twhile (this.accept(scanner.TokenType.Ident) || node.addChild(this._parseInterpolation())) {\r\n\t\t\thasContent = true;\r\n\t\t\tif (!this.hasWhitespace() && this.accept(scanner.TokenType.Delim, '-')) {\r\n\t\t\t\t// '-' is a valid char inside a ident (special treatment here to support #{foo}-#{bar})\r\n\t\t\t}\r\n\t\t\tif (this.hasWhitespace()) {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn hasContent ? this.finish(node) : null;\r\n\t}\r\n\r\n\tpublic _parseTerm(): nodes.Term {\r\n\t\tvar term = super._parseTerm();\r\n\t\tif (term) { return term; }\r\n\r\n\t\tterm = <nodes.Term> this.create(nodes.Term);\r\n\t\tif (term.setExpression(this._parseVariable())) {\r\n\t\t\treturn <nodes.Term> this.finish(term);\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\tpublic _parseInterpolation():nodes.Node {\r\n\t\tvar node = this.create(nodes.Interpolation);\r\n\t\tif (this.accept(sassScanner.InterpolationFunction)) {\r\n\t\t\tif (!node.addChild(this._parseBinaryExpr())) {\r\n\t\t\t\treturn this.finish(node, errors.ParseError.ExpressionExpected);\r\n\t\t\t}\r\n\t\t\tif (!this.accept(scanner.TokenType.CurlyR)) {\r\n\t\t\t\treturn this.finish(node, errors.ParseError.RightCurlyExpected);\r\n\t\t\t}\r\n\t\t\treturn this.finish(node);\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\tpublic _parseOperator(): nodes.Node {\r\n\t\tvar node = this.createNode(nodes.NodeType.Operator);\r\n\t\tif (this.peek(sassScanner.EqualsOperator) || this.peek(sassScanner.NotEqualsOperator)\r\n\t\t\t|| this.peek(sassScanner.GreaterEqualsOperator) || this.peek(sassScanner.SmallerEqualsOperator)\r\n\t\t\t|| this.peek(scanner.TokenType.Delim, '>') || this.peek(scanner.TokenType.Delim, '<')\r\n\t\t\t|| this.peek(scanner.TokenType.Ident, 'and') || this.peek(scanner.TokenType.Ident, 'or')\r\n\t\t\t|| this.peek(scanner.TokenType.Delim, '%')\r\n\t\t\t) {\r\n\t\t\tvar node = this.createNode(nodes.NodeType.Operator);\r\n\t\t\tthis.consumeToken();\r\n\t\t\treturn this.finish(node);\r\n\t\t}\r\n\t\treturn super._parseOperator();\r\n\t}\r\n\r\n\tpublic _parseUnaryOperator(): nodes.Node {\r\n\t\tif (this.peek(scanner.TokenType.Ident, 'not')) {\r\n\t\t\tvar node = this.create(nodes.Node);\r\n\t\t\tthis.consumeToken();\r\n\t\t\treturn this.finish(node);\r\n\t\t}\r\n\t\treturn super._parseUnaryOperator();\r\n\t}\r\n\r\n\tpublic _parseRuleSetDeclaration() : nodes.Node {\r\n\t\tif (this.peek(scanner.TokenType.AtKeyword)) {\r\n\t\t\treturn this._parseKeyframe() // nested @keyframe\r\n\t\t\t\t|| this._parseImport() // nested @import\r\n\t\t\t\t|| this._parseMedia() // nested @media\r\n\t\t\t\t|| this._parseFontFace() // nested @font-face\r\n\t\t\t\t|| this._parseWarnAndDebug() // @warn and @debug statements\r\n\t\t\t\t|| this._parseControlStatement() // @if, @while, @for, @each\r\n\t\t\t\t|| this._parseFunctionDeclaration() // @function\r\n\t\t\t\t|| this._parseExtends() // @extends\r\n\t\t\t\t|| this._parseMixinReference() // @include\r\n\t\t\t\t|| this._parseMixinContent() // @content\r\n\t\t\t\t|| this._parseMixinDeclaration(); // nested @mixin\r\n\t\t}\r\n\t\treturn this._parseVariableDeclaration() // variable declaration\r\n\t\t\t|| this._tryParseRuleset(true) // nested ruleset\r\n\t\t\t|| super._parseRuleSetDeclaration(); // try css ruleset declaration as last so in the error case, the ast will contain a declaration\r\n\t}\r\n\r\n\tpublic _parseDeclaration(resyncStopTokens?:scanner.TokenType[]): nodes.Declaration {\r\n\t\tvar node = <nodes.Declaration> this.create(nodes.Declaration);\r\n\t\tif (!node.setProperty(this._parseProperty())) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\tif (!this.accept(scanner.TokenType.Colon, ':')) {\r\n\t\t\treturn this.finish(node, errors.ParseError.ColonExpected, [ scanner.TokenType.Colon ], resyncStopTokens);\r\n\t\t}\r\n\t\tnode.colonPosition = this.prevToken.offset;\r\n\r\n\t\tvar hasContent = false;\r\n\t\tif (node.setValue(this._parseExpr())) {\r\n\t\t\thasContent = true;\r\n\t\t\tnode.addChild(this._parsePrio());\r\n\t\t}\r\n\t\tif (this.peek(scanner.TokenType.CurlyL)) {\r\n\t\t\tnode.setNestedProperties(this._parseNestedProperties());\r\n\t\t} else {\r\n\t\t\tif (!hasContent) {\r\n\t\t\t\treturn this.finish(node, errors.ParseError.PropertyValueExpected);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (this.peek(scanner.TokenType.SemiColon)) {\r\n\t\t\tnode.semicolonPosition = this.token.offset; // not part of the declaration, but useful information for code assist\r\n\t\t}\r\n\t\treturn this.finish(node);\r\n\t}\r\n\r\n\tpublic _parseNestedProperties(): nodes.NestedProperties {\r\n\t\tvar node = <nodes.NestedProperties> this.create(nodes.NestedProperties);\r\n\t\treturn this._parseBody(node, this._parseDeclaration.bind(this));\r\n\t}\r\n\r\n\tpublic _parseExtends(): nodes.Node {\r\n\t\tvar node = <nodes.ExtendsReference> this.create(nodes.ExtendsReference);\r\n\t\tif (this.accept(scanner.TokenType.AtKeyword, '@extend')) {\r\n\t\t\tif (!node.setSelector(this._parseSimpleSelector())) {\r\n\t\t\t\treturn this.finish(node, errors.ParseError.SelectorExpected);\r\n\t\t\t}\r\n\t\t\tif (this.accept(scanner.TokenType.Exclamation)) {\r\n\t\t\t\tif (!this.accept(scanner.TokenType.Ident, 'optional', true)) {\r\n\t\t\t\t\treturn this.finish(node, errors.ParseError.UnknownKeyword);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn this.finish(node);\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\tpublic _parseSimpleSelectorBody(): nodes.Node {\r\n\t\treturn this._parseSelectorCombinator() || this._parseSelectorPlaceholder() || super._parseSimpleSelectorBody();\r\n\t}\r\n\r\n\tpublic _parseSelectorCombinator():nodes.Node {\r\n\t\tvar node = this.createNode(nodes.NodeType.SelectorCombinator);\r\n\t\tif (this.accept(scanner.TokenType.Delim, '&')) {\r\n\t\t\twhile (!this.hasWhitespace() && (this.accept(scanner.TokenType.Delim, '-') || node.addChild(this._parseIdent()) || this.accept(scanner.TokenType.Delim, '&'))) {\r\n\t\t\t\t//  support &-foo\r\n\t\t\t}\r\n\t\t\treturn this.finish(node);\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\tpublic _parseSelectorPlaceholder():nodes.Node {\r\n\t\tvar node = this.createNode(nodes.NodeType.SelectorPlaceholder);\r\n\t\tif (this.accept(scanner.TokenType.Delim, '%')) {\r\n\t\t\tthis._parseIdent();\r\n\t\t\treturn this.finish(node);\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\tpublic _parseWarnAndDebug(): nodes.Node {\r\n\t\tif (!this.peek(scanner.TokenType.AtKeyword, '@debug') && !this.peek(scanner.TokenType.AtKeyword, '@warn')) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tvar node = this.createNode(nodes.NodeType.Debug);\r\n\t\tthis.consumeToken(); // @debug or @warn\r\n\t\tnode.addChild(this._parseExpr()); // optional\r\n\t\treturn this.finish(node);\r\n\t}\r\n\r\n\tpublic _parseControlStatement(parseStatement: () => nodes.Node = this._parseRuleSetDeclaration.bind(this)): nodes.Node {\r\n\t\tif (!this.peek(scanner.TokenType.AtKeyword)) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\treturn this._parseIfStatement(parseStatement) || this._parseForStatement(parseStatement)\r\n\t\t\t|| this._parseEachStatement(parseStatement) || this._parseWhileStatement(parseStatement);\r\n\t}\r\n\r\n\tpublic _parseIfStatement(parseStatement: () => nodes.Node): nodes.Node {\r\n\t\tif (!this.peek(scanner.TokenType.AtKeyword, '@if')) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\treturn this._internalParseIfStatement(parseStatement);\r\n\t}\r\n\r\n\tprivate _internalParseIfStatement(parseStatement: () => nodes.Node): nodes.IfStatement {\r\n\t\tvar node = <nodes.IfStatement> this.create(nodes.IfStatement);\r\n\t\tthis.consumeToken(); // @if or if\r\n\t\tif (!node.setExpression(this._parseBinaryExpr())) {\r\n\t\t\treturn this.finish(node, errors.ParseError.ExpressionExpected);\r\n\t\t}\r\n\t\tthis._parseBody(node, parseStatement);\r\n\t\tif (this.accept(scanner.TokenType.AtKeyword, '@else')) {\r\n\t\t\tif (this.peek(scanner.TokenType.Ident, 'if')) {\r\n\t\t\t\tnode.setElseClause(this._internalParseIfStatement(parseStatement));\r\n\t\t\t} else if (this.peek(scanner.TokenType.CurlyL)) {\r\n\t\t\t\tvar elseNode = <nodes.BodyDeclaration> this.create(nodes.ElseStatement);\r\n\t\t\t\tthis._parseBody(elseNode, parseStatement);\r\n\t\t\t\tnode.setElseClause(elseNode);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this.finish(node);\r\n\t}\r\n\r\n\tpublic _parseForStatement(parseStatement: () => nodes.Node): nodes.Node {\r\n\t\tif (!this.peek(scanner.TokenType.AtKeyword, '@for')) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\tvar node = <nodes.ForStatement> this.create(nodes.ForStatement);\r\n\t\tthis.consumeToken(); // @for\r\n\t\tif (!node.setVariable(this._parseVariable())) {\r\n\t\t\treturn this.finish(node, errors.ParseError.VariableNameExpected, [ scanner.TokenType.CurlyR ]);\r\n\t\t}\r\n\t\tif (!this.accept(scanner.TokenType.Ident, 'from')) {\r\n\t\t\treturn this.finish(node, sassErrors.ParseError.FromExpected, [ scanner.TokenType.CurlyR ]);\r\n\t\t}\r\n\t\tif (!node.addChild(this._parseBinaryExpr())) {\r\n\t\t\treturn this.finish(node, errors.ParseError.ExpressionExpected, [ scanner.TokenType.CurlyR ]);\r\n\t\t}\r\n\t\tif (!this.accept(scanner.TokenType.Ident, 'to') && !this.accept(scanner.TokenType.Ident, 'through')) {\r\n\t\t\treturn this.finish(node, sassErrors.ParseError.ThroughOrToExpected, [ scanner.TokenType.CurlyR ]);\r\n\t\t}\r\n\t\tif (!node.addChild(this._parseBinaryExpr())) {\r\n\t\t\treturn this.finish(node, errors.ParseError.ExpressionExpected, [ scanner.TokenType.CurlyR ]);\r\n\t\t}\r\n\r\n\t\treturn this._parseBody(node, parseStatement);\r\n\t}\r\n\r\n\tpublic _parseEachStatement(parseStatement: () => nodes.Node): nodes.Node {\r\n\t\tif (!this.peek(scanner.TokenType.AtKeyword, '@each')) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\tvar node = <nodes.EachStatement> this.create(nodes.EachStatement);\r\n\t\tthis.consumeToken(); // @each\r\n\t\tif (!node.setVariable(this._parseVariable())) {\r\n\t\t\treturn this.finish(node, errors.ParseError.VariableNameExpected, [ scanner.TokenType.CurlyR ]);\r\n\t\t}\r\n\t\tif (!this.accept(scanner.TokenType.Ident, 'in')) {\r\n\t\t\treturn this.finish(node, sassErrors.ParseError.InExpected, [ scanner.TokenType.CurlyR ]);\r\n\t\t}\r\n\t\tif (!node.addChild(this._parseExpr())) {\r\n\t\t\treturn this.finish(node, errors.ParseError.ExpressionExpected, [ scanner.TokenType.CurlyR ]);\r\n\t\t}\r\n\r\n\t\treturn this._parseBody(node, parseStatement);\r\n\t}\r\n\r\n\tpublic _parseWhileStatement(parseStatement: () => nodes.Node): nodes.Node {\r\n\t\tif (!this.peek(scanner.TokenType.AtKeyword, '@while')) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\tvar node = <nodes.WhileStatement> this.create(nodes.WhileStatement);\r\n\t\tthis.consumeToken(); // @while\r\n\t\tif (!node.addChild(this._parseBinaryExpr())) {\r\n\t\t\treturn this.finish(node, errors.ParseError.ExpressionExpected, [ scanner.TokenType.CurlyR ]);\r\n\t\t}\r\n\r\n\t\treturn this._parseBody(node, parseStatement);\r\n\t}\r\n\r\n\tpublic _parseFunctionBodyDeclaration(): nodes.Node {\r\n\t\treturn this._parseVariableDeclaration() || this._parseReturnStatement()\r\n\t\t\t|| this._parseControlStatement(this._parseFunctionBodyDeclaration.bind(this));\r\n\t}\r\n\r\n\tpublic _parseFunctionDeclaration(): nodes.Node {\r\n\t\tif (!this.peek(scanner.TokenType.AtKeyword, '@function')) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\tvar node = <nodes.FunctionDeclaration> this.create(nodes.FunctionDeclaration);\r\n\t\tthis.consumeToken(); // @function\r\n\r\n\t\tif (!node.setIdentifier(this._parseIdent([nodes.ReferenceType.Function ]))) {\r\n\t\t\treturn this.finish(node, errors.ParseError.IdentifierExpected, [ scanner.TokenType.CurlyR ]);\r\n\t\t}\r\n\r\n\t\tif (!this.accept(scanner.TokenType.ParenthesisL)) {\r\n\t\t\treturn this.finish(node, errors.ParseError.LeftParenthesisExpected, [ scanner.TokenType.CurlyR ] );\r\n\t\t}\r\n\r\n\t\tif (node.getParameters().addChild(this._parseParameterDeclaration())) {\r\n\t\t\twhile (this.accept(scanner.TokenType.Comma)) {\r\n\t\t\t\tif (!node.getParameters().addChild(this._parseParameterDeclaration())) {\r\n\t\t\t\t\treturn this.finish(node, errors.ParseError.VariableNameExpected);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!this.accept(scanner.TokenType.ParenthesisR)) {\r\n\t\t\treturn this.finish(node, errors.ParseError.RightParenthesisExpected, [ scanner.TokenType.CurlyR ] );\r\n\t\t}\r\n\r\n\t\treturn this._parseBody(node, this._parseFunctionBodyDeclaration.bind(this));\r\n\t}\r\n\r\n\tpublic _parseReturnStatement(): nodes.Node {\r\n\t\tif (!this.peek(scanner.TokenType.AtKeyword, '@return')) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\tvar node = this.createNode(nodes.NodeType.ReturnStatement);\r\n\t\tthis.consumeToken(); // @function\r\n\r\n\t\tif (!node.addChild(this._parseExpr())) {\r\n\t\t\treturn this.finish(node, errors.ParseError.ExpressionExpected);\r\n\t\t}\r\n\t\treturn this.finish(node);\r\n\t}\r\n\r\n\tpublic _parseMixinDeclaration():nodes.Node {\r\n\t\tif (!this.peek(scanner.TokenType.AtKeyword, '@mixin')) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\tvar node = <nodes.MixinDeclaration> this.create(nodes.MixinDeclaration);\r\n\t\tthis.consumeToken();\r\n\r\n\t\tif (!node.setIdentifier(this._parseIdent([nodes.ReferenceType.Mixin]))) {\r\n\t\t\treturn this.finish(node, errors.ParseError.IdentifierExpected, [ scanner.TokenType.CurlyR ]);\r\n\t\t}\r\n\r\n\t\tif (this.accept(scanner.TokenType.ParenthesisL)) {\r\n\t\t\tif (node.getParameters().addChild(this._parseParameterDeclaration())) {\r\n\t\t\t\twhile (this.accept(scanner.TokenType.Comma)) {\r\n\t\t\t\t\tif (!node.getParameters().addChild(this._parseParameterDeclaration())) {\r\n\t\t\t\t\t\treturn this.finish(node, errors.ParseError.VariableNameExpected);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (!this.accept(scanner.TokenType.ParenthesisR)) {\r\n\t\t\t\treturn this.finish(node, errors.ParseError.RightParenthesisExpected, [ scanner.TokenType.CurlyR ] );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn this._parseBody(node, this._parseRuleSetDeclaration.bind(this));\r\n\t}\r\n\r\n\tpublic _parseParameterDeclaration():nodes.Node {\r\n\r\n\t\tvar node = <nodes.FunctionParameter> this.create(nodes.FunctionParameter);\r\n\r\n\t\tif (!node.setIdentifier(this._parseVariable())) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\tif (this.accept(sassScanner.Ellipsis)) {\r\n\t\t\t// ok\r\n\t\t}\r\n\r\n\t\tif (this.accept(scanner.TokenType.Colon)) {\r\n\t\t\tif (!node.setDefaultValue(this._parseExpr(true))) {\r\n\t\t\t\treturn this.finish(node, errors.ParseError.VariableValueExpected, [], [scanner.TokenType.Comma, scanner.TokenType.ParenthesisR]);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this.finish(node);\r\n\t}\r\n\r\n\tpublic _parseMixinContent():nodes.Node {\r\n\t\tif (!this.peek(scanner.TokenType.AtKeyword, '@content')) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tvar node = this.createNode(nodes.NodeType.MixinContent);\r\n\t\tthis.consumeToken();\r\n\t\treturn this.finish(node);\r\n\t}\r\n\r\n\r\n\tpublic _parseMixinReference():nodes.Node {\r\n\t\tif (!this.peek(scanner.TokenType.AtKeyword, '@include')) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\tvar node = <nodes.MixinReference> this.create(nodes.MixinReference);\r\n\t\tthis.consumeToken();\r\n\r\n\t\tif (!node.setIdentifier(this._parseIdent([nodes.ReferenceType.Mixin]))) {\r\n\t\t\treturn this.finish(node, errors.ParseError.IdentifierExpected, [ scanner.TokenType.CurlyR ]);\r\n\t\t}\r\n\r\n\t\tif (this.accept(scanner.TokenType.ParenthesisL)) {\r\n\t\t\tif (node.getArguments().addChild(this._parseFunctionArgument())) {\r\n\t\t\t\twhile (this.accept(scanner.TokenType.Comma)) {\r\n\t\t\t\t\tif (!node.getArguments().addChild(this._parseFunctionArgument())) {\r\n\t\t\t\t\t\treturn this.finish(node, errors.ParseError.ExpressionExpected);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (!this.accept(scanner.TokenType.ParenthesisR)) {\r\n\t\t\t\treturn this.finish(node, errors.ParseError.RightParenthesisExpected);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this.peek(scanner.TokenType.CurlyL)) {\r\n\t\t\tvar content = <nodes.BodyDeclaration> this.create(nodes.BodyDeclaration);\r\n\t\t\tthis._parseBody(content, this._parseMixinReferenceBodyStatement.bind(this));\r\n\t\t\tnode.setContent(content);\r\n\t\t}\r\n\t\treturn this.finish(node);\r\n\t}\r\n\r\n\tpublic _parseMixinReferenceBodyStatement(): nodes.Node {\r\n\t\treturn this._parseRuleSetDeclaration() || this._parseKeyframeSelector();\r\n\t}\r\n\r\n\tpublic _parseFunctionArgument():nodes.Node {\r\n\t\t// [variableName ':'] expression | variableName '...'\r\n\t\tvar node = <nodes.FunctionArgument> this.create(nodes.FunctionArgument);\r\n\r\n\t\tvar pos = this.mark();\r\n\t\tvar argument = this._parseVariable();\r\n\t\tif (argument) {\r\n\t\t\tif (!this.accept(scanner.TokenType.Colon)) {\r\n\t\t\t\tif (this.accept(sassScanner.Ellipsis)) { // optional\r\n\t\t\t\t\tnode.setValue(argument);\r\n\t\t\t\t\treturn this.finish(node);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.restoreAtMark(pos);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tnode.setIdentifier(argument);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (node.setValue(this._parseExpr(true))) {\r\n\t\t\treturn this.finish(node);\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n}","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\n\r\nimport languageFacts = require('vs/languages/css/common/services/languageFacts');\r\nimport Modes = require('vs/editor/common/modes');\r\nimport cssIntellisense = require('vs/languages/css/common/services/intelliSense');\r\nimport nls = require('vs/nls');\r\nimport nodes = require('vs/languages/css/common/parser/cssNodes');\r\n\r\nexport class SASSIntellisense extends cssIntellisense.CSSIntellisense {\r\n\r\n\tprivate static variableDefaults: { [key: string]: string; } = {\r\n\t\t'$red': '1',\r\n\t\t'$green': '2',\r\n\t\t'$blue': '3',\r\n\t\t'$alpha': '1.0',\r\n\t\t'$color': '$color',\r\n\t\t'$weight': '0.5',\r\n\t\t'$hue': '0',\r\n\t\t'$saturation': '0%',\r\n\t\t'$lightness': '0%',\r\n\t\t'$degrees': '0',\r\n\t\t'$amount': '0',\r\n\t\t'$string': '\"\"',\r\n\t\t'$substring': '\"s\"',\r\n\t\t'$number': '0',\r\n\t\t'$limit': '1'\r\n\t};\r\n\r\n\tprivate static colorProposals = [\r\n\t\t{ func: 'red($color)', desc: nls.localize('sass.builtin.red', 'Gets the red component of a color.') },\r\n\t\t{ func: 'green($color)', desc: nls.localize('sass.builtin.green', 'Gets the green component of a color.') },\r\n\t\t{ func: 'blue($color)', desc: nls.localize('sass.builtin.blue', 'Gets the blue component of a color.') },\r\n\t\t{ func: 'mix($color, $color, [$weight])', desc: nls.localize('sass.builtin.mix', 'Mixes two colors together.') },\r\n\t\t{ func: 'hue($color)', desc: nls.localize('sass.builtin.hue', 'Gets the hue component of a color.') },\r\n\t\t{ func: 'saturation($color)', desc: nls.localize('sass.builtin.saturation', 'Gets the saturation component of a color.') },\r\n\t\t{ func: 'lightness($color)', desc: nls.localize('sass.builtin.lightness', 'Gets the lightness component of a color.') },\r\n\t\t{ func: 'adjust-hue($color, $degrees)', desc: nls.localize('sass.builtin.adjust-hue', 'Changes the hue of a color.') },\r\n\t\t{ func: 'lighten($color, $amount)', desc: nls.localize('sass.builtin.lighten', 'Makes a color lighter.') },\r\n\t\t{ func: 'darken($color, $amount)', desc: nls.localize('sass.builtin.darken', 'Makes a color darker.') },\r\n\t\t{ func: 'saturate($color, $amount)', desc: nls.localize('sass.builtin.saturate', 'Makes a color more saturated.') },\r\n\t\t{ func: 'desaturate($color, $amount)', desc: nls.localize('sass.builtin.desaturate', 'Makes a color less saturated.') },\r\n\t\t{ func: 'grayscale($color)', desc: nls.localize('sass.builtin.grayscale', 'Converts a color to grayscale.') },\r\n\t\t{ func: 'complement($color)', desc: nls.localize('sass.builtin.complement', 'Returns the complement of a color.') },\r\n\t\t{ func: 'invert($color)', desc: nls.localize('sass.builtin.invert', 'Returns the inverse of a color.') },\r\n\t\t{ func: 'alpha($color)', desc: nls.localize('sass.builtin.alpha', 'Gets the opacity component of a color.') },\r\n\t\t{ func: 'opacity($color)', desc: 'Gets the alpha component (opacity) of a color.' },\r\n\t\t{ func: 'rgba($color, $alpha)', desc: nls.localize('sass.builtin.rgba', 'Changes the alpha component for a color.') },\r\n\t\t{ func: 'opacify($color, $amount)', desc: nls.localize('sass.builtin.opacify', 'Makes a color more opaque.') },\r\n\t\t{ func: 'fade-in($color, $amount)', desc: nls.localize('sass.builtin.fade-in', 'Makes a color more opaque.') },\r\n\t\t{ func: 'transparentize($color, $amount) / fade-out($color, $amount)', desc: nls.localize('sass.builtin.transparentize', 'Makes a color more transparent.') },\r\n\t\t{ func: 'adjust-color($color, [$red], [$green], [$blue], [$hue], [$saturation], [$lightness], [$alpha])', desc: nls.localize('sass.builtin.adjust-color', 'Increases or decreases one or more components of a color.') },\r\n\t\t{ func: 'scale-color($color, [$red], [$green], [$blue], [$saturation], [$lightness], [$alpha])', desc: nls.localize('sass.builtin.scale-color', 'Fluidly scales one or more properties of a color.') },\r\n\t\t{ func: 'change-color($color, [$red], [$green], [$blue], [$hue], [$saturation], [$lightness], [$alpha])', desc: nls.localize('sass.builtin.change-color', 'Changes one or more properties of a color.') },\r\n\t\t{ func: 'ie-hex-str($color)', desc: nls.localize('sass.builtin.ie-hex-str', 'Converts a color into the format understood by IE filters.') }\r\n\t];\r\n\r\n\tprivate static selectorFuncs = [\r\n\t\t{ func: 'selector-nest($selectors…)', desc: nls.localize('sass.builtin.selector-nest', 'Nests selector beneath one another like they would be nested in the stylesheet.') },\r\n\t\t{ func: 'selector-append($selectors…)', desc: nls.localize('sass.builtin.selector-append', 'Appends selectors to one another without spaces in between.') },\r\n\t\t{ func: 'selector-extend($selector, $extendee, $extender)', desc: nls.localize('sass.builtin.selector-extend', 'Extends $extendee with $extender within $selector.') },\r\n\t\t{ func: 'selector-replace($selector, $original, $replacement)', desc: nls.localize('sass.builtin.selector-replace', 'Replaces $original with $replacement within $selector.') },\r\n\t\t{ func: 'selector-unify($selector1, $selector2)', desc: nls.localize('sass.builtin.selector-unify', 'Unifies two selectors to produce a selector that matches elements matched by both.') },\r\n\t\t{ func: 'is-superselector($super, $sub)', desc: nls.localize('sass.builtin.is-superselector', 'Returns whether $super matches all the elements $sub does, and possibly more.') },\r\n\t\t{ func: 'simple-selectors($selector)', desc: nls.localize('sass.builtin.simple-selectors', 'Returns the simple selectors that comprise a compound selector.') },\r\n\t\t{ func: 'selector-parse($selector)', desc: nls.localize('sass.builtin.selector-parse', 'Parses a selector into the format returned by &.') }\r\n\t];\r\n\r\n\tprivate static builtInFuncs = [\r\n\t\t{ func: 'unquote($string)', desc: nls.localize('sass.builtin.unquote', 'Removes quotes from a string.') },\r\n\t\t{ func: 'quote($string)', desc: nls.localize('sass.builtin.quote', 'Adds quotes to a string.') },\r\n\t\t{ func: 'str-length($string)', desc: nls.localize('sass.builtin.str-length', 'Returns the number of characters in a string.') },\r\n\t\t{ func: 'str-insert($string, $insert, $index)', desc: nls.localize('sass.builtin.str-insert', 'Inserts $insert into $string at $index.') },\r\n\t\t{ func: 'str-index($string, $substring)', desc: nls.localize('sass.builtin.str-index', 'Returns the index of the first occurance of $substring in $string.') },\r\n\t\t{ func: 'str-slice($string, $start-at, [$end-at])', desc: nls.localize('sass.builtin.str-slice', 'Extracts a substring from $string.') },\r\n\t\t{ func: 'to-upper-case($string)', desc: nls.localize('sass.builtin.to-upper-case', 'Converts a string to upper case.') },\r\n\t\t{ func: 'to-lower-case($string)', desc: nls.localize('sass.builtin.to-lower-case', 'Converts a string to lower case.') },\r\n\t\t{ func: 'percentage($number)', desc: nls.localize('sass.builtin.percentage', 'Converts a unitless number to a percentage.') },\r\n\t\t{ func: 'round($number)', desc: nls.localize('sass.builtin.round', 'Rounds a number to the nearest whole number.') },\r\n\t\t{ func: 'ceil($number)', desc: nls.localize('sass.builtin.ceil', 'Rounds a number up to the next whole number.') },\r\n\t\t{ func: 'floor($number)', desc: nls.localize('sass.builtin.floor', 'Rounds a number down to the previous whole number.') },\r\n\t\t{ func: 'abs($number)', desc: nls.localize('sass.builtin.abs', 'Returns the absolute value of a number.') },\r\n\t\t{ func: 'min($numbers)', desc: nls.localize('sass.builtin.min', 'Finds the minimum of several numbers.') },\r\n\t\t{ func: 'max($numbers)', desc: nls.localize('sass.builtin.max', 'Finds the maximum of several numbers.') },\r\n\t\t{ func: 'random([$limit])', desc: nls.localize('sass.builtin.random', 'Returns a random number.') },\r\n\t\t{ func: 'length($list)', desc: nls.localize('sass.builtin.length', 'Returns the length of a list.') },\r\n\t\t{ func: 'nth($list, $n)', desc: nls.localize('sass.builtin.nth', 'Returns a specific item in a list.') },\r\n\t\t{ func: 'set-nth($list, $n, $value)', desc: nls.localize('sass.builtin.set-nth', 'Replaces the nth item in a list.') },\r\n\t\t{ func: 'join($list1, $list2, [$separator])', desc: nls.localize('sass.builtin.join', 'Joins together two lists into one.') },\r\n\t\t{ func: 'append($list1, $val, [$separator])', desc: nls.localize('sass.builtin.append', 'Appends a single value onto the end of a list.') },\r\n\t\t{ func: 'zip($lists)', desc: nls.localize('sass.builtin.zip', 'Combines several lists into a single multidimensional list.') },\r\n\t\t{ func: 'index($list, $value)', desc: nls.localize('sass.builtin.index', 'Returns the position of a value within a list.') },\r\n\t\t{ func: 'list-separator(#list)', desc: nls.localize('sass.builtin.list-separator', 'Returns the separator of a list.') },\r\n\t\t{ func: 'map-get($map, $key)', desc: nls.localize('sass.builtin.map-get', 'Returns the value in a map associated with a given key.') },\r\n\t\t{ func: 'map-merge($map1, $map2)', desc: nls.localize('sass.builtin.map-merge', 'Merges two maps together into a new map.') },\r\n\t\t{ func: 'map-remove($map, $keys)', desc: nls.localize('sass.builtin.map-remove', 'Returns a new map with keys removed.') },\r\n\t\t{ func: 'map-keys($map)', desc: nls.localize('sass.builtin.map-keys', 'Returns a list of all keys in a map.') },\r\n\t\t{ func: 'map-values($map)', desc: nls.localize('sass.builtin.map-values', 'Returns a list of all values in a map.') },\r\n\t\t{ func: 'map-has-key($map, $key)', desc: nls.localize('sass.builtin.map-has-key', 'Returns whether a map has a value associated with a given key.') },\r\n\t\t{ func: 'keywords($args)', desc: nls.localize('sass.builtin.keywords', 'Returns the keywords passed to a function that takes variable arguments.') },\r\n\t\t{ func: 'feature-exists($feature)', desc: nls.localize('sass.builtin.feature-exists', 'Returns whether a feature exists in the current Sass runtime.') },\r\n\t\t{ func: 'variable-exists($name)', desc: nls.localize('sass.builtin.variable-exists', 'Returns whether a variable with the given name exists in the current scope.') },\r\n\t\t{ func: 'global-variable-exists($name)', desc: nls.localize('sass.builtin.global-variable-exists', 'Returns whether a variable with the given name exists in the global scope.') },\r\n\t\t{ func: 'function-exists($name)', desc: nls.localize('sass.builtin.function-exists', 'Returns whether a function with the given name exists.') },\r\n\t\t{ func: 'mixin-exists($name)', desc: nls.localize('sass.builtin.mixin-exists', 'Returns whether a mixin with the given name exists.') },\r\n\t\t{ func: 'inspect($value)', desc: nls.localize('sass.builtin.inspect', 'Returns the string representation of a value as it would be represented in Sass.') },\r\n\t\t{ func: 'type-of($value)', desc: nls.localize('sass.builtin.type-of', 'Returns the type of a value.') },\r\n\t\t{ func: 'unit($number)', desc: nls.localize('sass.builtin.unit', 'Returns the unit(s) associated with a number.') },\r\n\t\t{ func: 'unitless($number)', desc: nls.localize('sass.builtin.unitless', 'Returns whether a number has units.') },\r\n\t\t{ func: 'comparable($number1, $number2)', desc: nls.localize('sass.builtin.comparable', 'Returns whether two numbers can be added, subtracted, or compared.') },\r\n\t\t{ func: 'call($name, $args…)', desc: nls.localize('sass.builtin.call', 'Dynamically calls a Sass function.') }\r\n\t];\r\n\r\n\tconstructor() {\r\n\t\tsuper('$');\r\n\t}\r\n\r\n\tprivate createFunctionProposals(proposals: {func: string; desc: string; }[], result: Modes.ISuggestion[]): Modes.ISuggestion[] {\r\n\t\tvar replaceFunction = (match: string, p1: string) => p1 + ': {{' + (SASSIntellisense.variableDefaults[p1] || '') + '}}';\r\n\t\tproposals.forEach((p) => {\r\n\t\t\tresult.push({\r\n\t\t\t\tlabel: p.func.substr(0, p.func.indexOf('(')),\r\n\t\t\t\ttypeLabel: p.func,\r\n\t\t\t\tdocumentationLabel: p.desc,\r\n\t\t\t\tcodeSnippet: p.func.replace(/\\[?(\\$\\w+)\\]?/g, replaceFunction),\r\n\t\t\t\ttype: 'function'\r\n\t\t\t});\r\n\t\t});\r\n\t\treturn result;\r\n\t}\r\n\r\n\tpublic getCompletionsForSelector(ruleSet: nodes.RuleSet, result:Modes.ISuggestion[]): Modes.ISuggestion[] {\r\n\t\tthis.createFunctionProposals(SASSIntellisense.selectorFuncs, result);\r\n\t\treturn super.getCompletionsForSelector(ruleSet, result);\r\n\t}\r\n\r\n\tpublic getTermProposals(result:Modes.ISuggestion[]):Modes.ISuggestion[] {\r\n\t\tthis.createFunctionProposals(SASSIntellisense.builtInFuncs, result);\r\n\t\treturn super.getTermProposals(result);\r\n\t}\r\n\r\n\tprotected getColorProposals(entry: languageFacts.IEntry, result: Modes.ISuggestion[]): Modes.ISuggestion[] {\r\n\t\tthis.createFunctionProposals(SASSIntellisense.colorProposals, result);\r\n\t\treturn super.getColorProposals(entry, result);\r\n\t}\r\n\r\n\tpublic getCompletionsForDeclarationProperty(result: Modes.ISuggestion[]): Modes.ISuggestion[]{\r\n\t\tthis.getCompletionsForSelector(null, result);\r\n\t\treturn super.getCompletionsForDeclarationProperty(result);\r\n\t}\r\n\r\n}\r\n\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\n\r\nimport cssWorker = require('vs/languages/css/common/cssWorker');\r\nimport cssParser = require('vs/languages/css/common/parser/cssParser');\r\nimport sassParser = require('./parser/sassParser');\r\nimport sassIntellisense = require('./services/intelliSense');\r\n\r\nexport class SassWorker extends cssWorker.CSSWorker {\r\n\r\n\tpublic createIntellisense(): sassIntellisense.SASSIntellisense {\r\n\t\treturn new sassIntellisense.SASSIntellisense();\r\n\t}\r\n\r\n\tpublic createParser(): cssParser.Parser {\r\n\t\treturn new sassParser.SassParser();\r\n\t}\r\n\r\n}\r\n"]}