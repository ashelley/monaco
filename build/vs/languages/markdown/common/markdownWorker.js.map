{"version":3,"sources":["fake","vs/base/common/marked/raw.marked.js","vs/base/common/marked/marked.js","file:///D:/REPOS/monaco/vscode/src/vs/editor/common/modes/textToHtmlTokenizer.ts","file:///D:/REPOS/monaco/vscode/src/vs/languages/markdown/common/markdownWorker.ts"],"names":[],"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","file":"vs/languages/markdown/common/markdownWorker.js","sourcesContent":["}).call(this);","\n/**\n * marked - a markdown parser\n * Copyright (c) 2011-2014, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/chjj/marked\n */\n\n// TODO MonacoChange: we have our own way of defining modules\n// ;(function() {\n// END MonacoChange\n\n/**\n * Block-Level Grammar\n */\n\nvar block = {\n  newline: /^\\n+/,\n  code: /^( {4}[^\\n]+\\n*)+/,\n  fences: noop,\n  hr: /^( *[-*_]){3,} *(?:\\n+|$)/,\n  heading: /^ *(#{1,6}) *([^\\n]+?) *#* *(?:\\n+|$)/,\n  nptable: noop,\n  lheading: /^([^\\n]+)\\n *(=|-){2,} *(?:\\n+|$)/,\n  blockquote: /^( *>[^\\n]+(\\n(?!def)[^\\n]+)*\\n*)+/,\n  list: /^( *)(bull) [\\s\\S]+?(?:hr|def|\\n{2,}(?! )(?!\\1bull )\\n*|\\s*$)/,\n  html: /^ *(?:comment *(?:\\n|\\s*$)|closed *(?:\\n{2,}|\\s*$)|closing *(?:\\n{2,}|\\s*$))/,\n  def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +[\"(]([^\\n]+)[\")])? *(?:\\n+|$)/,\n  table: noop,\n  paragraph: /^((?:[^\\n]+\\n?(?!hr|heading|lheading|blockquote|tag|def))+)\\n*/,\n  text: /^[^\\n]+/\n};\n\nblock.bullet = /(?:[*+-]|\\d+\\.)/;\nblock.item = /^( *)(bull) [^\\n]*(?:\\n(?!\\1bull )[^\\n]*)*/;\nblock.item = replace(block.item, 'gm')\n  (/bull/g, block.bullet)\n  ();\n\nblock.list = replace(block.list)\n  (/bull/g, block.bullet)\n  ('hr', '\\\\n+(?=\\\\1?(?:[-*_] *){3,}(?:\\\\n+|$))')\n  ('def', '\\\\n+(?=' + block.def.source + ')')\n  ();\n\nblock.blockquote = replace(block.blockquote)\n  ('def', block.def)\n  ();\n\nblock._tag = '(?!(?:'\n  + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code'\n  + '|var|samp|kbd|sub|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo'\n  + '|span|br|wbr|ins|del|img)\\\\b)\\\\w+(?!:/|[^\\\\w\\\\s@]*@)\\\\b';\n\nblock.html = replace(block.html)\n  ('comment', /<!--[\\s\\S]*?-->/)\n  ('closed', /<(tag)[\\s\\S]+?<\\/\\1>/)\n  ('closing', /<tag(?:\"[^\"]*\"|'[^']*'|[^'\">])*?>/)\n  (/tag/g, block._tag)\n  ();\n\nblock.paragraph = replace(block.paragraph)\n  ('hr', block.hr)\n  ('heading', block.heading)\n  ('lheading', block.lheading)\n  ('blockquote', block.blockquote)\n  ('tag', '<' + block._tag)\n  ('def', block.def)\n  ();\n\n/**\n * Normal Block Grammar\n */\n\nblock.normal = merge({}, block);\n\n/**\n * GFM Block Grammar\n */\n\nblock.gfm = merge({}, block.normal, {\n  fences: /^ *(`{3,}|~{3,}) *(\\S+)? *\\n([\\s\\S]+?)\\s*\\1 *(?:\\n+|$)/,\n  paragraph: /^/\n});\n\nblock.gfm.paragraph = replace(block.paragraph)\n  ('(?!', '(?!'\n    + block.gfm.fences.source.replace('\\\\1', '\\\\2') + '|'\n    + block.list.source.replace('\\\\1', '\\\\3') + '|')\n  ();\n\n/**\n * GFM + Tables Block Grammar\n */\n\nblock.tables = merge({}, block.gfm, {\n  nptable: /^ *(\\S.*\\|.*)\\n *([-:]+ *\\|[-| :]*)\\n((?:.*\\|.*(?:\\n|$))*)\\n*/,\n  table: /^ *\\|(.+)\\n *\\|( *[-:]+[-| :]*)\\n((?: *\\|.*(?:\\n|$))*)\\n*/\n});\n\n/**\n * Block Lexer\n */\n\nfunction Lexer(options) {\n  this.tokens = [];\n  this.tokens.links = {};\n  this.options = options || marked.defaults;\n  this.rules = block.normal;\n\n  if (this.options.gfm) {\n    if (this.options.tables) {\n      this.rules = block.tables;\n    } else {\n      this.rules = block.gfm;\n    }\n  }\n}\n\n/**\n * Expose Block Rules\n */\n\nLexer.rules = block;\n\n/**\n * Static Lex Method\n */\n\nLexer.lex = function(src, options) {\n  var lexer = new Lexer(options);\n  return lexer.lex(src);\n};\n\n/**\n * Preprocessing\n */\n\nLexer.prototype.lex = function(src) {\n  src = src\n    .replace(/\\r\\n|\\r/g, '\\n')\n    .replace(/\\t/g, '    ')\n    .replace(/\\u00a0/g, ' ')\n    .replace(/\\u2424/g, '\\n');\n\n  return this.token(src, true);\n};\n\n/**\n * Lexing\n */\n\nLexer.prototype.token = function(src, top, bq) {\n  var src = src.replace(/^ +$/gm, '')\n    , next\n    , loose\n    , cap\n    , bull\n    , b\n    , item\n    , space\n    , i\n    , l;\n\n  while (src) {\n    // newline\n    if (cap = this.rules.newline.exec(src)) {\n      src = src.substring(cap[0].length);\n      if (cap[0].length > 1) {\n        this.tokens.push({\n          type: 'space'\n        });\n      }\n    }\n\n    // code\n    if (cap = this.rules.code.exec(src)) {\n      src = src.substring(cap[0].length);\n      cap = cap[0].replace(/^ {4}/gm, '');\n      this.tokens.push({\n        type: 'code',\n        text: !this.options.pedantic\n          ? cap.replace(/\\n+$/, '')\n          : cap\n      });\n      continue;\n    }\n\n    // fences (gfm)\n    if (cap = this.rules.fences.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'code',\n        lang: cap[2],\n        text: cap[3]\n      });\n      continue;\n    }\n\n    // heading\n    if (cap = this.rules.heading.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'heading',\n        depth: cap[1].length,\n        text: cap[2]\n      });\n      continue;\n    }\n\n    // table no leading pipe (gfm)\n    if (top && (cap = this.rules.nptable.exec(src))) {\n      src = src.substring(cap[0].length);\n\n      item = {\n        type: 'table',\n        header: cap[1].replace(/^ *| *\\| *$/g, '').split(/ *\\| */),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        cells: cap[3].replace(/\\n$/, '').split('\\n')\n      };\n\n      for (i = 0; i < item.align.length; i++) {\n        if (/^ *-+: *$/.test(item.align[i])) {\n          item.align[i] = 'right';\n        } else if (/^ *:-+: *$/.test(item.align[i])) {\n          item.align[i] = 'center';\n        } else if (/^ *:-+ *$/.test(item.align[i])) {\n          item.align[i] = 'left';\n        } else {\n          item.align[i] = null;\n        }\n      }\n\n      for (i = 0; i < item.cells.length; i++) {\n        item.cells[i] = item.cells[i].split(/ *\\| */);\n      }\n\n      this.tokens.push(item);\n\n      continue;\n    }\n\n    // lheading\n    if (cap = this.rules.lheading.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'heading',\n        depth: cap[2] === '=' ? 1 : 2,\n        text: cap[1]\n      });\n      continue;\n    }\n\n    // hr\n    if (cap = this.rules.hr.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'hr'\n      });\n      continue;\n    }\n\n    // blockquote\n    if (cap = this.rules.blockquote.exec(src)) {\n      src = src.substring(cap[0].length);\n\n      this.tokens.push({\n        type: 'blockquote_start'\n      });\n\n      cap = cap[0].replace(/^ *> ?/gm, '');\n\n      // Pass `top` to keep the current\n      // \"toplevel\" state. This is exactly\n      // how markdown.pl works.\n      this.token(cap, top, true);\n\n      this.tokens.push({\n        type: 'blockquote_end'\n      });\n\n      continue;\n    }\n\n    // list\n    if (cap = this.rules.list.exec(src)) {\n      src = src.substring(cap[0].length);\n      bull = cap[2];\n\n      this.tokens.push({\n        type: 'list_start',\n        ordered: bull.length > 1\n      });\n\n      // Get each top-level item.\n      cap = cap[0].match(this.rules.item);\n\n      next = false;\n      l = cap.length;\n      i = 0;\n\n      for (; i < l; i++) {\n        item = cap[i];\n\n        // Remove the list item's bullet\n        // so it is seen as the next token.\n        space = item.length;\n        item = item.replace(/^ *([*+-]|\\d+\\.) +/, '');\n\n        // Outdent whatever the\n        // list item contains. Hacky.\n        if (~item.indexOf('\\n ')) {\n          space -= item.length;\n          item = !this.options.pedantic\n            ? item.replace(new RegExp('^ {1,' + space + '}', 'gm'), '')\n            : item.replace(/^ {1,4}/gm, '');\n        }\n\n        // Determine whether the next list item belongs here.\n        // Backpedal if it does not belong in this list.\n        if (this.options.smartLists && i !== l - 1) {\n          b = block.bullet.exec(cap[i + 1])[0];\n          if (bull !== b && !(bull.length > 1 && b.length > 1)) {\n            src = cap.slice(i + 1).join('\\n') + src;\n            i = l - 1;\n          }\n        }\n\n        // Determine whether item is loose or not.\n        // Use: /(^|\\n)(?! )[^\\n]+\\n\\n(?!\\s*$)/\n        // for discount behavior.\n        loose = next || /\\n\\n(?!\\s*$)/.test(item);\n        if (i !== l - 1) {\n          next = item.charAt(item.length - 1) === '\\n';\n          if (!loose) loose = next;\n        }\n\n        this.tokens.push({\n          type: loose\n            ? 'loose_item_start'\n            : 'list_item_start'\n        });\n\n        // Recurse.\n        this.token(item, false, bq);\n\n        this.tokens.push({\n          type: 'list_item_end'\n        });\n      }\n\n      this.tokens.push({\n        type: 'list_end'\n      });\n\n      continue;\n    }\n\n    // html\n    if (cap = this.rules.html.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: this.options.sanitize\n          ? 'paragraph'\n          : 'html',\n        pre: cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style',\n        text: cap[0]\n      });\n      continue;\n    }\n\n    // def\n    if ((!bq && top) && (cap = this.rules.def.exec(src))) {\n      src = src.substring(cap[0].length);\n      this.tokens.links[cap[1].toLowerCase()] = {\n        href: cap[2],\n        title: cap[3]\n      };\n      continue;\n    }\n\n    // table (gfm)\n    if (top && (cap = this.rules.table.exec(src))) {\n      src = src.substring(cap[0].length);\n\n      item = {\n        type: 'table',\n        header: cap[1].replace(/^ *| *\\| *$/g, '').split(/ *\\| */),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        cells: cap[3].replace(/(?: *\\| *)?\\n$/, '').split('\\n')\n      };\n\n      for (i = 0; i < item.align.length; i++) {\n        if (/^ *-+: *$/.test(item.align[i])) {\n          item.align[i] = 'right';\n        } else if (/^ *:-+: *$/.test(item.align[i])) {\n          item.align[i] = 'center';\n        } else if (/^ *:-+ *$/.test(item.align[i])) {\n          item.align[i] = 'left';\n        } else {\n          item.align[i] = null;\n        }\n      }\n\n      for (i = 0; i < item.cells.length; i++) {\n        item.cells[i] = item.cells[i]\n          .replace(/^ *\\| *| *\\| *$/g, '')\n          .split(/ *\\| */);\n      }\n\n      this.tokens.push(item);\n\n      continue;\n    }\n\n    // top-level paragraph\n    if (top && (cap = this.rules.paragraph.exec(src))) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'paragraph',\n        text: cap[1].charAt(cap[1].length - 1) === '\\n'\n          ? cap[1].slice(0, -1)\n          : cap[1]\n      });\n      continue;\n    }\n\n    // text\n    if (cap = this.rules.text.exec(src)) {\n      // Top-level should never reach here.\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'text',\n        text: cap[0]\n      });\n      continue;\n    }\n\n    if (src) {\n      throw new\n        Error('Infinite loop on byte: ' + src.charCodeAt(0));\n    }\n  }\n\n  return this.tokens;\n};\n\n/**\n * Inline-Level Grammar\n */\n\nvar inline = {\n  escape: /^\\\\([\\\\`*{}\\[\\]()#+\\-.!_>])/,\n  autolink: /^<([^ >]+(@|:\\/)[^ >]+)>/,\n  url: noop,\n  tag: /^<!--[\\s\\S]*?-->|^<\\/?\\w+(?:\"[^\"]*\"|'[^']*'|[^'\">])*?>/,\n  link: /^!?\\[(inside)\\]\\(href\\)/,\n  reflink: /^!?\\[(inside)\\]\\s*\\[([^\\]]*)\\]/,\n  nolink: /^!?\\[((?:\\[[^\\]]*\\]|[^\\[\\]])*)\\]/,\n  strong: /^__([\\s\\S]+?)__(?!_)|^\\*\\*([\\s\\S]+?)\\*\\*(?!\\*)/,\n  em: /^\\b_((?:__|[\\s\\S])+?)_\\b|^\\*((?:\\*\\*|[\\s\\S])+?)\\*(?!\\*)/,\n  code: /^(`+)\\s*([\\s\\S]*?[^`])\\s*\\1(?!`)/,\n  br: /^ {2,}\\n(?!\\s*$)/,\n  del: noop,\n  text: /^[\\s\\S]+?(?=[\\\\<!\\[_*`]| {2,}\\n|$)/\n};\n\ninline._inside = /(?:\\[[^\\]]*\\]|[^\\[\\]]|\\](?=[^\\[]*\\]))*/;\ninline._href = /\\s*<?([\\s\\S]*?)>?(?:\\s+['\"]([\\s\\S]*?)['\"])?\\s*/;\n\ninline.link = replace(inline.link)\n  ('inside', inline._inside)\n  ('href', inline._href)\n  ();\n\ninline.reflink = replace(inline.reflink)\n  ('inside', inline._inside)\n  ();\n\n/**\n * Normal Inline Grammar\n */\n\ninline.normal = merge({}, inline);\n\n/**\n * Pedantic Inline Grammar\n */\n\ninline.pedantic = merge({}, inline.normal, {\n  strong: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n  em: /^_(?=\\S)([\\s\\S]*?\\S)_(?!_)|^\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)/\n});\n\n/**\n * GFM Inline Grammar\n */\n\ninline.gfm = merge({}, inline.normal, {\n  escape: replace(inline.escape)('])', '~|])')(),\n  url: /^(https?:\\/\\/[^\\s<]+[^<.,:;\"')\\]\\s])/,\n  del: /^~~(?=\\S)([\\s\\S]*?\\S)~~/,\n  text: replace(inline.text)\n    (']|', '~]|')\n    ('|', '|https?://|')\n    ()\n});\n\n/**\n * GFM + Line Breaks Inline Grammar\n */\n\ninline.breaks = merge({}, inline.gfm, {\n  br: replace(inline.br)('{2,}', '*')(),\n  text: replace(inline.gfm.text)('{2,}', '*')()\n});\n\n/**\n * Inline Lexer & Compiler\n */\n\nfunction InlineLexer(links, options) {\n  this.options = options || marked.defaults;\n  this.links = links;\n  this.rules = inline.normal;\n  this.renderer = this.options.renderer || new Renderer;\n  this.renderer.options = this.options;\n\n  if (!this.links) {\n    throw new\n      Error('Tokens array requires a `links` property.');\n  }\n\n  if (this.options.gfm) {\n    if (this.options.breaks) {\n      this.rules = inline.breaks;\n    } else {\n      this.rules = inline.gfm;\n    }\n  } else if (this.options.pedantic) {\n    this.rules = inline.pedantic;\n  }\n}\n\n/**\n * Expose Inline Rules\n */\n\nInlineLexer.rules = inline;\n\n/**\n * Static Lexing/Compiling Method\n */\n\nInlineLexer.output = function(src, links, options) {\n  var inline = new InlineLexer(links, options);\n  return inline.output(src);\n};\n\n/**\n * Lexing/Compiling\n */\n\nInlineLexer.prototype.output = function(src) {\n  var out = ''\n    , link\n    , text\n    , href\n    , cap;\n\n  while (src) {\n    // escape\n    if (cap = this.rules.escape.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += cap[1];\n      continue;\n    }\n\n    // autolink\n    if (cap = this.rules.autolink.exec(src)) {\n      src = src.substring(cap[0].length);\n      if (cap[2] === '@') {\n        text = cap[1].charAt(6) === ':'\n          ? this.mangle(cap[1].substring(7))\n          : this.mangle(cap[1]);\n        href = this.mangle('mailto:') + text;\n      } else {\n        text = escape(cap[1]);\n        href = text;\n      }\n      out += this.renderer.link(href, null, text);\n      continue;\n    }\n\n    // url (gfm)\n    if (!this.inLink && (cap = this.rules.url.exec(src))) {\n      src = src.substring(cap[0].length);\n      text = escape(cap[1]);\n      href = text;\n      out += this.renderer.link(href, null, text);\n      continue;\n    }\n\n    // tag\n    if (cap = this.rules.tag.exec(src)) {\n      if (!this.inLink && /^<a /i.test(cap[0])) {\n        this.inLink = true;\n      } else if (this.inLink && /^<\\/a>/i.test(cap[0])) {\n        this.inLink = false;\n      }\n      src = src.substring(cap[0].length);\n      out += this.options.sanitize\n        ? escape(cap[0])\n        : cap[0];\n      continue;\n    }\n\n    // link\n    if (cap = this.rules.link.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.inLink = true;\n      out += this.outputLink(cap, {\n        href: cap[2],\n        title: cap[3]\n      });\n      this.inLink = false;\n      continue;\n    }\n\n    // reflink, nolink\n    if ((cap = this.rules.reflink.exec(src))\n        || (cap = this.rules.nolink.exec(src))) {\n      src = src.substring(cap[0].length);\n      link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n      link = this.links[link.toLowerCase()];\n      if (!link || !link.href) {\n        out += cap[0].charAt(0);\n        src = cap[0].substring(1) + src;\n        continue;\n      }\n      this.inLink = true;\n      out += this.outputLink(cap, link);\n      this.inLink = false;\n      continue;\n    }\n\n    // strong\n    if (cap = this.rules.strong.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.strong(this.output(cap[2] || cap[1]));\n      continue;\n    }\n\n    // em\n    if (cap = this.rules.em.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.em(this.output(cap[2] || cap[1]));\n      continue;\n    }\n\n    // code\n    if (cap = this.rules.code.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.codespan(escape(cap[2], true));\n      continue;\n    }\n\n    // br\n    if (cap = this.rules.br.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.br();\n      continue;\n    }\n\n    // del (gfm)\n    if (cap = this.rules.del.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.del(this.output(cap[1]));\n      continue;\n    }\n\n    // text\n    if (cap = this.rules.text.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += escape(this.smartypants(cap[0]));\n      continue;\n    }\n\n    if (src) {\n      throw new\n        Error('Infinite loop on byte: ' + src.charCodeAt(0));\n    }\n  }\n\n  return out;\n};\n\n/**\n * Compile Link\n */\n\nInlineLexer.prototype.outputLink = function(cap, link) {\n  var href = escape(link.href)\n    , title = link.title ? escape(link.title) : null;\n\n  return cap[0].charAt(0) !== '!'\n    ? this.renderer.link(href, title, this.output(cap[1]))\n    : this.renderer.image(href, title, escape(cap[1]));\n};\n\n/**\n * Smartypants Transformations\n */\n// TODO MonacoChange: Our build fails over the following lines if they are not commented out\nInlineLexer.prototype.smartypants = function(text) {\n\treturn text;\n//  if (!this.options.smartypants) return text;\n//  return text\n//    // em-dashes\n//    .replace(/--/g, '\\u2014')\n//    // opening singles\n//    .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, '$1\\u2018')\n//    // closing singles & apostrophes\n//    .replace(/'/g, '\\u2019')\n//    // opening doubles\n//    .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, '$1\\u201c')\n//    // closing doubles\n//    .replace(/\"/g, '\\u201d')\n//    // ellipses\n//    .replace(/\\.{3}/g, '\\u2026');\n// END MonacoChange\n};\n\n/**\n * Mangle Links\n */\n\nInlineLexer.prototype.mangle = function(text) {\n  var out = ''\n    , l = text.length\n    , i = 0\n    , ch;\n\n  for (; i < l; i++) {\n    ch = text.charCodeAt(i);\n    if (Math.random() > 0.5) {\n      ch = 'x' + ch.toString(16);\n    }\n    out += '&#' + ch + ';';\n  }\n\n  return out;\n};\n\n/**\n * Renderer\n */\n\nfunction Renderer(options) {\n  this.options = options || {};\n}\n\nRenderer.prototype.code = function(code, lang, escaped) {\n  if (this.options.highlight) {\n    var out = this.options.highlight(code, lang);\n    if (out != null && out !== code) {\n      escaped = true;\n      code = out;\n    }\n  }\n\n  if (!lang) {\n    return '<pre><code>'\n      + (escaped ? code : escape(code, true))\n      + '\\n</code></pre>';\n  }\n\n  return '<pre><code class=\"'\n    + this.options.langPrefix\n    + escape(lang, true)\n    + '\">'\n    + (escaped ? code : escape(code, true))\n    + '\\n</code></pre>\\n';\n};\n\nRenderer.prototype.blockquote = function(quote) {\n  return '<blockquote>\\n' + quote + '</blockquote>\\n';\n};\n\nRenderer.prototype.html = function(html) {\n  return html;\n};\n\nRenderer.prototype.heading = function(text, level, raw) {\n  return '<h'\n    + level\n    + ' id=\"'\n    + this.options.headerPrefix\n    + raw.toLowerCase().replace(/[^\\w]+/g, '-')\n    + '\">'\n    + text\n    + '</h'\n    + level\n    + '>\\n';\n};\n\nRenderer.prototype.hr = function() {\n  return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n};\n\nRenderer.prototype.list = function(body, ordered) {\n  var type = ordered ? 'ol' : 'ul';\n  return '<' + type + '>\\n' + body + '</' + type + '>\\n';\n};\n\nRenderer.prototype.listitem = function(text) {\n  return '<li>' + text + '</li>\\n';\n};\n\nRenderer.prototype.paragraph = function(text) {\n  return '<p>' + text + '</p>\\n';\n};\n\nRenderer.prototype.table = function(header, body) {\n  return '<table>\\n'\n    + '<thead>\\n'\n    + header\n    + '</thead>\\n'\n    + '<tbody>\\n'\n    + body\n    + '</tbody>\\n'\n    + '</table>\\n';\n};\n\nRenderer.prototype.tablerow = function(content) {\n  return '<tr>\\n' + content + '</tr>\\n';\n};\n\nRenderer.prototype.tablecell = function(content, flags) {\n  var type = flags.header ? 'th' : 'td';\n  var tag = flags.align\n    ? '<' + type + ' style=\"text-align:' + flags.align + '\">'\n    : '<' + type + '>';\n  return tag + content + '</' + type + '>\\n';\n};\n\n// span level renderer\nRenderer.prototype.strong = function(text) {\n  return '<strong>' + text + '</strong>';\n};\n\nRenderer.prototype.em = function(text) {\n  return '<em>' + text + '</em>';\n};\n\nRenderer.prototype.codespan = function(text) {\n  return '<code>' + text + '</code>';\n};\n\nRenderer.prototype.br = function() {\n  return this.options.xhtml ? '<br/>' : '<br>';\n};\n\nRenderer.prototype.del = function(text) {\n  return '<del>' + text + '</del>';\n};\n\nRenderer.prototype.link = function(href, title, text) {\n  if (this.options.sanitize) {\n    try {\n      var prot = decodeURIComponent(unescape(href))\n        .replace(/[^\\w:]/g, '')\n        .toLowerCase();\n    } catch (e) {\n      return '';\n    }\n    if (prot.indexOf('javascript:') === 0) {\n      return '';\n    }\n  }\n  var out = '<a href=\"' + href + '\"';\n  if (title) {\n    out += ' title=\"' + title + '\"';\n  }\n  out += '>' + text + '</a>';\n  return out;\n};\n\nRenderer.prototype.image = function(href, title, text) {\n  var out = '<img src=\"' + href + '\" alt=\"' + text + '\"';\n  if (title) {\n    out += ' title=\"' + title + '\"';\n  }\n  out += this.options.xhtml ? '/>' : '>';\n  return out;\n};\n\n/**\n * Parsing & Compiling\n */\n\nfunction Parser(options) {\n  this.tokens = [];\n  this.token = null;\n  this.options = options || marked.defaults;\n  this.options.renderer = this.options.renderer || new Renderer;\n  this.renderer = this.options.renderer;\n  this.renderer.options = this.options;\n}\n\n/**\n * Static Parse Method\n */\n\nParser.parse = function(src, options, renderer) {\n  var parser = new Parser(options, renderer);\n  return parser.parse(src);\n};\n\n/**\n * Parse Loop\n */\n\nParser.prototype.parse = function(src) {\n  this.inline = new InlineLexer(src.links, this.options, this.renderer);\n  this.tokens = src.reverse();\n\n  var out = '';\n  while (this.next()) {\n    out += this.tok();\n  }\n\n  return out;\n};\n\n/**\n * Next Token\n */\n\nParser.prototype.next = function() {\n  return this.token = this.tokens.pop();\n};\n\n/**\n * Preview Next Token\n */\n\nParser.prototype.peek = function() {\n  return this.tokens[this.tokens.length - 1] || 0;\n};\n\n/**\n * Parse Text Tokens\n */\n\nParser.prototype.parseText = function() {\n  var body = this.token.text;\n\n  while (this.peek().type === 'text') {\n    body += '\\n' + this.next().text;\n  }\n\n  return this.inline.output(body);\n};\n\n/**\n * Parse Current Token\n */\n\nParser.prototype.tok = function() {\n  switch (this.token.type) {\n    case 'space': {\n      return '';\n    }\n    case 'hr': {\n      return this.renderer.hr();\n    }\n    case 'heading': {\n      return this.renderer.heading(\n        this.inline.output(this.token.text),\n        this.token.depth,\n        this.token.text);\n    }\n    case 'code': {\n      return this.renderer.code(this.token.text,\n        this.token.lang,\n        this.token.escaped);\n    }\n    case 'table': {\n      var header = ''\n        , body = ''\n        , i\n        , row\n        , cell\n        , flags\n        , j;\n\n      // header\n      cell = '';\n      for (i = 0; i < this.token.header.length; i++) {\n        flags = { header: true, align: this.token.align[i] };\n        cell += this.renderer.tablecell(\n          this.inline.output(this.token.header[i]),\n          { header: true, align: this.token.align[i] }\n        );\n      }\n      header += this.renderer.tablerow(cell);\n\n      for (i = 0; i < this.token.cells.length; i++) {\n        row = this.token.cells[i];\n\n        cell = '';\n        for (j = 0; j < row.length; j++) {\n          cell += this.renderer.tablecell(\n            this.inline.output(row[j]),\n            { header: false, align: this.token.align[j] }\n          );\n        }\n\n        body += this.renderer.tablerow(cell);\n      }\n      return this.renderer.table(header, body);\n    }\n    case 'blockquote_start': {\n      var body = '';\n\n      while (this.next().type !== 'blockquote_end') {\n        body += this.tok();\n      }\n\n      return this.renderer.blockquote(body);\n    }\n    case 'list_start': {\n      var body = ''\n        , ordered = this.token.ordered;\n\n      while (this.next().type !== 'list_end') {\n        body += this.tok();\n      }\n\n      return this.renderer.list(body, ordered);\n    }\n    case 'list_item_start': {\n      var body = '';\n\n      while (this.next().type !== 'list_item_end') {\n        body += this.token.type === 'text'\n          ? this.parseText()\n          : this.tok();\n      }\n\n      return this.renderer.listitem(body);\n    }\n    case 'loose_item_start': {\n      var body = '';\n\n      while (this.next().type !== 'list_item_end') {\n        body += this.tok();\n      }\n\n      return this.renderer.listitem(body);\n    }\n    case 'html': {\n      var html = !this.token.pre && !this.options.pedantic\n        ? this.inline.output(this.token.text)\n        : this.token.text;\n      return this.renderer.html(html);\n    }\n    case 'paragraph': {\n      return this.renderer.paragraph(this.inline.output(this.token.text));\n    }\n    case 'text': {\n      return this.renderer.paragraph(this.parseText());\n    }\n  }\n};\n\n/**\n * Helpers\n */\n\nfunction escape(html, encode) {\n  return html\n    .replace(!encode ? /&(?!#?\\w+;)/g : /&/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/\"/g, '&quot;')\n    .replace(/'/g, '&#39;');\n}\n\nfunction unescape(html) {\n  return html.replace(/&([#\\w]+);/g, function(_, n) {\n    n = n.toLowerCase();\n    if (n === 'colon') return ':';\n    if (n.charAt(0) === '#') {\n      return n.charAt(1) === 'x'\n        ? String.fromCharCode(parseInt(n.substring(2), 16))\n        : String.fromCharCode(+n.substring(1));\n    }\n    return '';\n  });\n}\n\nfunction replace(regex, opt) {\n  regex = regex.source;\n  opt = opt || '';\n  return function self(name, val) {\n    if (!name) return new RegExp(regex, opt);\n    val = val.source || val;\n    val = val.replace(/(^|[^\\[])\\^/g, '$1');\n    regex = regex.replace(name, val);\n    return self;\n  };\n}\n\nfunction noop() {}\nnoop.exec = noop;\n\nfunction merge(obj) {\n  var i = 1\n    , target\n    , key;\n\n  for (; i < arguments.length; i++) {\n    target = arguments[i];\n    for (key in target) {\n      if (Object.prototype.hasOwnProperty.call(target, key)) {\n        obj[key] = target[key];\n      }\n    }\n  }\n\n  return obj;\n}\n\n\n/**\n * Marked\n */\n\nfunction marked(src, opt, callback) {\n  if (callback || typeof opt === 'function') {\n    if (!callback) {\n      callback = opt;\n      opt = null;\n    }\n\n    opt = merge({}, marked.defaults, opt || {});\n\n    var highlight = opt.highlight\n      , tokens\n      , pending\n      , i = 0;\n\n    try {\n      tokens = Lexer.lex(src, opt)\n    } catch (e) {\n      return callback(e);\n    }\n\n    pending = tokens.length;\n\n    var done = function(err) {\n      if (err) {\n        opt.highlight = highlight;\n        return callback(err);\n      }\n\n      var out;\n\n      try {\n        out = Parser.parse(tokens, opt);\n      } catch (e) {\n        err = e;\n      }\n\n      opt.highlight = highlight;\n\n      return err\n        ? callback(err)\n        : callback(null, out);\n    };\n\n    if (!highlight || highlight.length < 3) {\n      return done();\n    }\n\n    delete opt.highlight;\n\n    if (!pending) return done();\n\n    for (; i < tokens.length; i++) {\n      (function(token) {\n        if (token.type !== 'code') {\n          return --pending || done();\n        }\n        return highlight(token.text, token.lang, function(err, code) {\n          if (err) return done(err);\n          if (code == null || code === token.text) {\n            return --pending || done();\n          }\n          token.text = code;\n          token.escaped = true;\n          --pending || done();\n        });\n      })(tokens[i]);\n    }\n\n    return;\n  }\n  try {\n    if (opt) opt = merge({}, marked.defaults, opt);\n    return Parser.parse(Lexer.lex(src, opt), opt);\n  } catch (e) {\n    e.message += '\\nPlease report this to https://github.com/chjj/marked.';\n    if ((opt || marked.defaults).silent) {\n      return '<p>An error occured:</p><pre>'\n        + escape(e.message + '', true)\n        + '</pre>';\n    }\n    throw e;\n  }\n}\n\n/**\n * Options\n */\n\nmarked.options =\nmarked.setOptions = function(opt) {\n  merge(marked.defaults, opt);\n  return marked;\n};\n\nmarked.defaults = {\n  gfm: true,\n  tables: true,\n  breaks: false,\n  pedantic: false,\n  sanitize: false,\n  smartLists: false,\n  silent: false,\n  highlight: null,\n  langPrefix: 'lang-',\n  smartypants: false,\n  headerPrefix: '',\n  renderer: new Renderer,\n  xhtml: false\n};\n\n/**\n * Expose\n */\n\nmarked.Parser = Parser;\nmarked.parser = Parser.parse;\n\nmarked.Renderer = Renderer;\n\nmarked.Lexer = Lexer;\nmarked.lexer = Lexer.lex;\n\nmarked.InlineLexer = InlineLexer;\nmarked.inlineLexer = InlineLexer.output;\n\nmarked.parse = marked;\n\n// TODO MonacoChange: we have our own way of defining modules\nthis.marked = marked;\n//if (typeof module !== 'undefined' && typeof exports === 'object') {\n//  module.exports = marked;\n//} else if (typeof define === 'function' && define.amd) {\n//  define(function() { return marked; });\n//} else {\n//  this.marked = marked;\n//}\n//\n//}).call(function() {\n//  return this || (typeof window !== 'undefined' ? window : global);\n//}());\n// END MonacoChange\n;\ndefine(\"vs/base/common/marked/raw.marked\", [], function () {\n\t\t\t\treturn this.marked;\n\t\t\t});","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nrequire.config({\n\tshim: {\n\t\t'vs/base/common/marked/raw.marked': {\n\t\t\texports: function () {\n\t\t\t\treturn this.marked;\n\t\t\t}\n\t\t}\n\t}\n});\n\ndefine(__m[0], __M([8]), function (marked) {\n\treturn {\n\t\tmarked: marked\n\t};\n});","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\n\r\nimport {IHTMLContentElement} from 'vs/base/common/htmlContent';\r\nimport * as strings from 'vs/base/common/strings';\r\nimport {IMode, IState, ITokenizationSupport} from 'vs/editor/common/modes';\r\nimport {NullState, nullTokenize} from 'vs/editor/common/modes/nullMode';\r\n\r\nexport function tokenizeToHtmlContent(text: string, mode: IMode): IHTMLContentElement {\r\n\treturn _tokenizeToHtmlContent(text, _getSafeTokenizationSupport(mode));\r\n}\r\n\r\nexport function tokenizeToString(text: string, mode: IMode, extraTokenClass?: string): string {\r\n\treturn _tokenizeToString(text, _getSafeTokenizationSupport(mode), extraTokenClass);\r\n}\r\n\r\nfunction _getSafeTokenizationSupport(mode: IMode): ITokenizationSupport {\r\n\tif (mode && mode.tokenizationSupport) {\r\n\t\treturn mode.tokenizationSupport;\r\n\t}\r\n\treturn {\r\n\t\tshouldGenerateEmbeddedModels: false,\r\n\t\tgetInitialState: () => new NullState(null, null),\r\n\t\ttokenize: (buffer:string, state: IState, deltaOffset:number = 0, stopAtOffset?:number) => nullTokenize(null, buffer, state, deltaOffset, stopAtOffset)\r\n\t};\r\n}\r\n\r\nfunction _tokenizeToHtmlContent(text: string, tokenizationSupport: ITokenizationSupport): IHTMLContentElement {\r\n\tvar result: IHTMLContentElement = {\r\n\t\ttagName: 'div',\r\n\t\tstyle: 'white-space: pre-wrap',\r\n\t\tchildren: []\r\n\t};\r\n\r\n\tvar emitToken = (className: string, tokenText: string) => {\r\n\t\tresult.children.push({\r\n\t\t\ttagName: 'span',\r\n\t\t\tclassName: className,\r\n\t\t\ttext: tokenText\r\n\t\t});\r\n\t};\r\n\r\n\tvar emitNewLine = () => {\r\n\t\tresult.children.push({\r\n\t\t\ttagName: 'br'\r\n\t\t});\r\n\t};\r\n\r\n\t_tokenizeLines(text, tokenizationSupport, emitToken, emitNewLine);\r\n\r\n\treturn result;\r\n}\r\n\r\nfunction _tokenizeToString(text: string, tokenizationSupport: ITokenizationSupport, extraTokenClass: string = ''): string {\r\n\tif (extraTokenClass && extraTokenClass.length > 0) {\r\n\t\textraTokenClass = ' ' + extraTokenClass;\r\n\t}\r\n\r\n\tvar result = '';\r\n\r\n\tvar emitToken = (className: string, tokenText: string) => {\r\n\t\tresult += '<span class=\"' + className + extraTokenClass + '\">' + strings.escape(tokenText) + '</span>';\r\n\t};\r\n\r\n\tvar emitNewLine = () => {\r\n\t\tresult += '<br/>';\r\n\t};\r\n\r\n\tresult = '<div style=\"white-space: pre-wrap;\">';\r\n\t_tokenizeLines(text, tokenizationSupport, emitToken, emitNewLine);\r\n\tresult += '</div>';\r\n\r\n\treturn result;\r\n}\r\n\r\ninterface IEmitTokenFunc {\r\n\t(className: string, innerText: string): void;\r\n}\r\ninterface IEmitNewLineFunc {\r\n\t(): void;\r\n}\r\n\r\nfunction _tokenizeLines(text: string, tokenizationSupport: ITokenizationSupport, emitToken: IEmitTokenFunc, emitNewLine: IEmitNewLineFunc): void {\r\n\tvar lines = text.split(/\\r\\n|\\r|\\n/);\r\n\tvar currentState = tokenizationSupport.getInitialState();\r\n\tfor (var i = 0; i < lines.length; i++) {\r\n\t\tcurrentState = _tokenizeLine(lines[i], tokenizationSupport, emitToken, currentState);\r\n\r\n\t\t// Keep new lines\r\n\t\tif (i < lines.length - 1) {\r\n\t\t\temitNewLine();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction _tokenizeLine(line: string, tokenizationSupport:ITokenizationSupport, emitToken: IEmitTokenFunc, startState: IState): IState {\r\n\tvar tokenized = tokenizationSupport.tokenize(line, startState),\r\n\t\tendState = tokenized.endState,\r\n\t\ttokens = tokenized.tokens,\r\n\t\toffset = 0,\r\n\t\ttokenText: string;\r\n\r\n\t// For each token inject spans with proper class names based on token type\r\n\tfor (var j = 0; j < tokens.length; j++) {\r\n\t\tvar token = tokens[j];\r\n\r\n\t\t// Tokens only provide a startIndex from where they are valid from. As such, we need to\r\n\t\t// look ahead the value of the token by advancing until the next tokens start inex or the\r\n\t\t// end of the line.\r\n\t\tif (j < tokens.length - 1) {\r\n\t\t\ttokenText = line.substring(offset, tokens[j + 1].startIndex);\r\n\t\t\toffset = tokens[j + 1].startIndex;\r\n\t\t} else {\r\n\t\t\ttokenText = line.substr(offset);\r\n\t\t}\r\n\r\n\t\tvar className = 'token';\r\n\t\tvar safeType = token.type.replace(/[^a-z0-9\\-]/gi, ' ');\r\n\t\tif (safeType.length > 0) {\r\n\t\t\tclassName += ' ' + safeType;\r\n\t\t}\r\n\t\temitToken(className, tokenText);\r\n\t}\r\n\r\n\treturn endState;\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\n\r\nimport WinJS = require('vs/base/common/winjs.base');\r\nimport URI from 'vs/base/common/uri';\r\nimport Types = require('vs/base/common/types');\r\nimport Modes = require('vs/editor/common/modes');\r\nimport Paths = require('vs/base/common/paths');\r\nimport Marked = require('vs/base/common/marked/marked');\r\nimport {tokenizeToString} from 'vs/editor/common/modes/textToHtmlTokenizer';\r\nimport {isMacintosh} from 'vs/base/common/platform';\r\nimport {IModeService} from 'vs/editor/common/services/modeService';\r\nimport {IResourceService} from 'vs/editor/common/services/resourceService';\r\nimport {IMarkerService} from 'vs/platform/markers/common/markers';\r\n\r\nenum Theme {\r\n\tLIGHT,\r\n\tDARK,\r\n\tHC_BLACK\r\n}\r\n\r\nexport class MarkdownWorker {\r\n\r\n\tprivate static DEFAULT_MODE = 'text/plain';\r\n\r\n\tprivate cssLinks: string[];\r\n\tprivate theme: Theme = Theme.DARK;\r\n\r\n\t// Custom Scrollbar CSS (inlined because of pseudo elements that cannot be made theme aware)\r\n\tprivate static LIGHT_SCROLLBAR_CSS: string = [\r\n\t\t'<style type=\"text/css\">',\r\n\t\t'\t::-webkit-scrollbar {',\r\n\t\t'\t\twidth: 14px;',\r\n\t\t'\t\theight: 14px;',\r\n\t\t'\t}',\r\n\t\t'',\r\n\t\t'\t::-webkit-scrollbar-thumb {',\r\n\t\t'\t\tbackground-color: rgba(100, 100, 100, 0.4);',\r\n\t\t'\t}',\r\n\t\t'',\r\n\t\t'\t::-webkit-scrollbar-thumb:hover {',\r\n\t\t'\t\tbackground-color: rgba(100, 100, 100, 0.7);',\r\n\t\t'\t}',\r\n\t\t'',\r\n\t\t'\t::-webkit-scrollbar-thumb:active {',\r\n\t\t'\t\tbackground-color: rgba(0, 0, 0, 0.6);',\r\n\t\t'\t}',\r\n\t\t'</style>'\r\n\t].join('\\n');\r\n\r\n\tprivate static DARK_SCROLLBAR_CSS: string = [\r\n\t\t'<style type=\"text/css\">',\r\n\t\t'\t::-webkit-scrollbar {',\r\n\t\t'\t\twidth: 14px;',\r\n\t\t'\t\theight: 14px;',\r\n\t\t'\t}',\r\n\t\t'',\r\n\t\t'\t::-webkit-scrollbar-thumb {',\r\n\t\t'\t\tbackground-color: rgba(121, 121, 121, 0.4);',\r\n\t\t'\t}',\r\n\t\t'',\r\n\t\t'\t::-webkit-scrollbar-thumb:hover {',\r\n\t\t'\t\tbackground-color: rgba(100, 100, 100, 0.7);',\r\n\t\t'\t}',\r\n\t\t'',\r\n\t\t'\t::-webkit-scrollbar-thumb:active {',\r\n\t\t'\t\tbackground-color: rgba(85, 85, 85, 0.8);',\r\n\t\t'\t}',\r\n\t\t'</style>'\r\n\t].join('\\n');\r\n\r\n\tprivate static HC_BLACK_SCROLLBAR_CSS: string = [\r\n\t\t'<style type=\"text/css\">',\r\n\t\t'\t::-webkit-scrollbar {',\r\n\t\t'\t\twidth: 14px;',\r\n\t\t'\t\theight: 14px;',\r\n\t\t'\t}',\r\n\t\t'',\r\n\t\t'\t::-webkit-scrollbar-thumb {',\r\n\t\t'\t\tbackground-color: rgba(111, 195, 223, 0.3);',\r\n\t\t'\t}',\r\n\t\t'',\r\n\t\t'\t::-webkit-scrollbar-thumb:hover {',\r\n\t\t'\t\tbackground-color: rgba(111, 195, 223, 0.4);',\r\n\t\t'\t}',\r\n\t\t'',\r\n\t\t'\t::-webkit-scrollbar-thumb:active {',\r\n\t\t'\t\tbackground-color: rgba(111, 195, 223, 0.4);',\r\n\t\t'\t}',\r\n\t\t'</style>'\r\n\t].join('\\n');\r\n\r\n\tprivate modeService: IModeService;\r\n\tprivate resourceService:IResourceService;\r\n\tprivate markerService: IMarkerService;\r\n\tprivate _modeId: string;\r\n\r\n\tconstructor(\r\n\t\tmodeId: string,\r\n\t\t@IResourceService resourceService: IResourceService,\r\n\t\t@IMarkerService markerService: IMarkerService,\r\n\t\t@IModeService modeService: IModeService\r\n\t) {\r\n\t\tthis._modeId = modeId;\r\n\t\tthis.resourceService = resourceService;\r\n\t\tthis.markerService = markerService;\r\n\t\tthis.modeService = modeService;\r\n\t}\r\n\r\n\t_doConfigure(options: any): WinJS.TPromise<void> {\r\n\t\tif (options && options.theme) {\r\n\t\t\tthis.theme = (options.theme === 'vs-dark') ? Theme.DARK : (options.theme === 'vs') ? Theme.LIGHT : Theme.HC_BLACK;\r\n\t\t}\r\n\r\n\t\tif (options && Types.isArray(options.styles)) {\r\n\t\t\tthis.cssLinks = options.styles;\r\n\t\t}\r\n\r\n\t\treturn WinJS.TPromise.as(void 0);\r\n\t}\r\n\r\n\tpublic getEmitOutput(resource: URI, absoluteWorkersResourcePath: string): WinJS.TPromise<Modes.IEmitOutput> { // TODO@Ben technical debt: worker cannot resolve paths absolute\r\n\t\tlet model = this.resourceService.get(resource);\r\n\t\tlet cssLinks: string[] = this.cssLinks || [];\r\n\r\n\t\t// Custom Renderer to fix href in images\r\n\t\tlet renderer = new Marked.marked.Renderer();\r\n\t\tlet $this = this;\r\n\t\trenderer.image = function(href: string, title: string, text: string): string {\r\n\t\t\tlet out = '<img src=\"' + $this.fixHref(resource, href) + '\" alt=\"' + text + '\"';\r\n\t\t\tif (title) {\r\n\t\t\t\tout += ' title=\"' + title + '\"';\r\n\t\t\t}\r\n\r\n\t\t\tout += (this.options && this.options.xhtml) ? '/>' : '>';\r\n\r\n\t\t\treturn out;\r\n\t\t};\r\n\r\n\t\t// Custom Renderer to open links always in a new tab\r\n\t\tlet superRenderLink = renderer.link;\r\n\t\trenderer.link = function(href: string, title: string, text: string): string {\r\n\t\t\tlet link = superRenderLink.call(this, href, title, text);\r\n\r\n\t\t\t// We cannot support local anchor tags because the iframe editor does not have a src set\r\n\t\t\tif (href && href[0] === '#') {\r\n\t\t\t\tlink = link.replace('href=', 'localhref=');\r\n\t\t\t} else {\r\n\t\t\t\tlink = link.replace('<a', '<a target=\"_blank\"');\r\n\t\t\t}\r\n\r\n\t\t\treturn link;\r\n\t\t};\r\n\r\n\t\tlet modeService = this.modeService;\r\n\r\n\t\t// Custom highlighter to use our modes to render code\r\n\t\tlet highlighter = function(code: string, lang: string, callback?: (error: Error, result: string) => void) {\r\n\r\n\t\t\t// Lookup the mode and use the tokenizer to get the HTML\r\n\t\t\tlet mimeForLang = modeService.getModeIdForLanguageName(lang) || lang || MarkdownWorker.DEFAULT_MODE;\r\n\t\t\tmodeService.getOrCreateMode(mimeForLang).then((mode) => {\r\n\t\t\t\tcallback(null, tokenizeToString(code, mode));\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\treturn new WinJS.Promise((c, e) => {\r\n\r\n\t\t\t// Render markdown file contents to HTML\r\n\t\t\tMarked.marked(model.getValue(), {\r\n\t\t\t\tgfm: true, // GitHub flavored markdown\r\n\t\t\t\trenderer: renderer,\r\n\t\t\t\thighlight: highlighter\r\n\t\t\t}, (error: Error, htmlResult: string) => {\r\n\r\n\t\t\t\t// Compute head\r\n\t\t\t\tlet head = [\r\n\t\t\t\t\t'<!DOCTYPE html>',\r\n\t\t\t\t\t'<html>',\r\n\t\t\t\t\t'<head>',\r\n\t\t\t\t\t'<meta http-equiv=\"Content-type\" content=\"text/html;charset=UTF-8\">',\r\n\t\t\t\t\t(cssLinks.length === 0) ? '<link rel=\"stylesheet\" href=\"' + absoluteWorkersResourcePath + '/markdown.css\" type=\"text/css\" media=\"screen\">' : '',\r\n\t\t\t\t\t(cssLinks.length === 0) ? '<link rel=\"stylesheet\" href=\"' + absoluteWorkersResourcePath + '/tokens.css\" type=\"text/css\" media=\"screen\">' : '',\r\n\t\t\t\t\t(this.theme === Theme.LIGHT) ? MarkdownWorker.LIGHT_SCROLLBAR_CSS : (this.theme === Theme.DARK) ? MarkdownWorker.DARK_SCROLLBAR_CSS : MarkdownWorker.HC_BLACK_SCROLLBAR_CSS,\r\n\t\t\t\t\tcssLinks.map((style) => {\r\n\t\t\t\t\t\treturn '<link rel=\"stylesheet\" href=\"' + this.fixHref(resource, style) + '\" type=\"text/css\" media=\"screen\">';\r\n\t\t\t\t\t}).join('\\n'),\r\n\t\t\t\t\t'</head>',\r\n\t\t\t\t\tisMacintosh ? '<body class=\"mac\">' : '<body>'\r\n\t\t\t\t].join('\\n');\r\n\r\n\t\t\t\t// Compute body\r\n\t\t\t\tlet body = [\r\n\t\t\t\t\t(this.theme === Theme.LIGHT) ? '<div class=\"monaco-editor vs\">' : (this.theme === Theme.DARK) ? '<div class=\"monaco-editor vs-dark\">' : '<div class=\"monaco-editor hc-black\">',\r\n\t\t\t\t\thtmlResult,\r\n\t\t\t\t\t'</div>',\r\n\t\t\t\t].join('\\n');\r\n\r\n\t\t\t\t// Tail\r\n\t\t\t\tlet tail = [\r\n\t\t\t\t\t'</body>',\r\n\t\t\t\t\t'</html>'\r\n\t\t\t\t].join('\\n');\r\n\r\n\t\t\t\tc({\r\n\t\t\t\t\thead: head,\r\n\t\t\t\t\tbody: body,\r\n\t\t\t\t\ttail: tail\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\tprivate fixHref(resource: URI, href: string): string {\r\n\t\tif (href) {\r\n\r\n\t\t\t// Return early if href is already a URL\r\n\t\t\tif (URI.parse(href).scheme) {\r\n\t\t\t\treturn href;\r\n\t\t\t}\r\n\r\n\t\t\t// Otherwise convert to a file URI by joining the href with the resource location\r\n\t\t\treturn URI.file(Paths.join(Paths.dirname(resource.fsPath), href)).toString();\r\n\t\t}\r\n\r\n\t\treturn href;\r\n\t}\r\n}"]}