{"version":3,"sources":["fake","file:///C:/REPOS/monaco/vscode/src/vs/languages/less/common/parser/lessScanner.ts","file:///C:/REPOS/monaco/vscode/src/vs/languages/less/common/parser/lessParser.ts","file:///C:/REPOS/monaco/vscode/src/vs/languages/less/common/services/intelliSense.ts","file:///C:/REPOS/monaco/vscode/src/vs/languages/less/common/lessWorker.ts"],"names":[],"mappings":"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","file":"vs/languages/less/common/lessWorker.js","sourcesContent":["}).call(this);","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\n\r\nimport scanner = require('vs/languages/css/common/parser/cssScanner');\r\n\r\nconst _FSL = '/'.charCodeAt(0);\r\nconst _NWL = '\\n'.charCodeAt(0);\r\nconst _CAR = '\\r'.charCodeAt(0);\r\nconst _LFD = '\\f'.charCodeAt(0);\r\nconst _TIC = '`'.charCodeAt(0);\r\nconst _DOT = '.'.charCodeAt(0);\r\n\r\nlet customTokenValue = scanner.TokenType.CustomToken;\r\nexport const Ellipsis: scanner.TokenType = customTokenValue++;\r\n\r\nexport class LessScanner extends scanner.Scanner {\r\n\r\n\tpublic scan(): scanner.IToken {\r\n\r\n\t\tlet triviaToken = this.trivia();\r\n\t\tif (triviaToken !== null) {\r\n\t\t\treturn triviaToken;\r\n\t\t}\r\n\r\n\t\tlet offset = this.stream.pos();\r\n\r\n\t\t// LESS: escaped JavaScript code `let a = \"dddd\"`\r\n\t\tlet tokenType = this.escapedJavaScript();\r\n\t\tif (tokenType !== null) {\r\n\t\t\treturn this.finishToken(offset, tokenType);\r\n\t\t}\r\n\r\n\t\tif (this.stream.advanceIfChars([_DOT, _DOT, _DOT])) {\r\n\t\t\treturn this.finishToken(offset, Ellipsis);\r\n\t\t}\r\n\r\n\t\treturn super.scan();\r\n\t}\r\n\r\n\tprotected comment():boolean {\r\n\t\tif (super.comment()) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tif (this.stream.advanceIfChars([_FSL, _FSL])) {\r\n\t\t\tthis.stream.advanceWhileChar((ch:number) => {\r\n\t\t\t\tswitch(ch) {\r\n\t\t\t\t\tcase _NWL:\r\n\t\t\t\t\tcase _CAR:\r\n\t\t\t\t\tcase _LFD:\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate escapedJavaScript():scanner.TokenType {\r\n\t\tlet ch = this.stream.peekChar();\r\n\t\tif (ch === _TIC) {\r\n\t\t\tthis.stream.advance(1);\r\n\t\t\tthis.stream.advanceWhileChar((ch) => { return ch !== _TIC; });\r\n\t\t\treturn this.stream.advanceIfChar(_TIC) ? scanner.TokenType.EscapedJavaScript : scanner.TokenType.BadEscapedJavaScript;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n}","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nimport lessScanner = require ('./lessScanner');\r\nimport scanner = require('vs/languages/css/common/parser/cssScanner');\r\nimport cssParser = require('vs/languages/css/common/parser/cssParser');\r\nimport nodes = require('vs/languages/css/common/parser/cssNodes');\r\nimport errors = require('vs/languages/css/common/parser/cssErrors');\r\n\r\n/// <summary>\r\n/// A parser for LESS\r\n/// http://lesscss.org/\r\n/// </summary>\r\nexport class LessParser extends cssParser.Parser {\r\n\r\n\tpublic constructor() {\r\n\t\tsuper(new lessScanner.LessScanner());\r\n\t}\r\n\r\n\tpublic _parseStylesheetStatement():nodes.Node {\r\n\t\treturn this._tryParseMixinDeclaration() || super._parseStylesheetStatement() || this._parseVariableDeclaration();\r\n\t}\r\n\r\n\tpublic _parseImport():nodes.Node {\r\n\t\tvar node = <nodes.Import> this.create(nodes.Import);\r\n\t\tif(!this.accept(scanner.TokenType.AtKeyword, '@import') && !this.accept(scanner.TokenType.AtKeyword, '@import-once') /* deprecated in less 1.4.1 */) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\t// less 1.4.1: @import (css) \"lib\"\r\n\t\tif (this.accept(scanner.TokenType.ParenthesisL)) {\r\n\t\t\tif (!this.accept(scanner.TokenType.Ident)) {\r\n\t\t\t\treturn this.finish(node, errors.ParseError.IdentifierExpected, [ scanner.TokenType.SemiColon ] );\r\n\t\t\t}\r\n\t\t\tif (!this.accept(scanner.TokenType.ParenthesisR)) {\r\n\t\t\t\treturn this.finish(node, errors.ParseError.RightParenthesisExpected, [ scanner.TokenType.SemiColon ]);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(!this.accept(scanner.TokenType.URI) && !this.accept(scanner.TokenType.String)) {\r\n\t\t\treturn this.finish(node, errors.ParseError.URIOrStringExpected, [ scanner.TokenType.SemiColon ]);\r\n\t\t}\r\n\r\n\t\tnode.setMedialist(this._parseMediaList());\r\n\r\n\t\treturn this.finish(node);\r\n\t}\r\n\r\n\tpublic _parseMediaQuery(resyncStopToken: scanner.TokenType[]): nodes.Node {\r\n\t\tvar node = <nodes.MediaQuery> super._parseMediaQuery(resyncStopToken);\r\n\t\tif (!node) {\r\n\t\t\tvar node = <nodes.MediaQuery> this.create(nodes.MediaQuery);\r\n\t\t\tif (node.addChild(this._parseVariable())) {\r\n\t\t\t\treturn this.finish(node);\r\n\t\t\t}\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\treturn node;\r\n\t}\r\n\r\n\tpublic _parseVariableDeclaration(panic:scanner.TokenType[]=[]): nodes.VariableDeclaration {\r\n\t\tvar node = <nodes.VariableDeclaration> this.create(nodes.VariableDeclaration);\r\n\r\n\t\tvar mark= this.mark();\r\n\t\tif (!node.setVariable(this._parseVariable())) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\tif (this.accept(scanner.TokenType.Colon, ':')) {\r\n\t\t\tnode.colonPosition = this.prevToken.offset;\r\n\t\t\tif (!node.setValue(this._parseExpr())) {\r\n\t\t\t\treturn <nodes.VariableDeclaration> this.finish(node, errors.ParseError.VariableValueExpected, [], panic);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis.restoreAtMark(mark);\r\n\t\t\treturn null; // at keyword, but no ':', not a variable declaration but some at keyword\r\n\t\t}\r\n\r\n\t\tif (this.peek(scanner.TokenType.SemiColon)) {\r\n\t\t\tnode.semicolonPosition = this.token.offset; // not part of the declaration, but useful information for code assist\r\n\t\t}\r\n\r\n\t\treturn <nodes.VariableDeclaration> this.finish(node);\r\n\t}\r\n\r\n\tpublic _parseVariable(): nodes.Variable {\r\n\t\tvar node = <nodes.Variable> this.create(nodes.Variable);\r\n\t\tvar mark= this.mark();\r\n\t\twhile (this.accept(scanner.TokenType.Delim, '@')) {\r\n\t\t\tif (this.hasWhitespace()) {\r\n\t\t\t\tthis.restoreAtMark(mark);\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (!this.accept(scanner.TokenType.AtKeyword)) {\r\n\t\t\tthis.restoreAtMark(mark);\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\treturn <nodes.Variable> node;\r\n\t}\r\n\r\n\tpublic _parseTerm(): nodes.Term {\r\n\t\tvar term = super._parseTerm();\r\n\t\tif (term) { return term; }\r\n\r\n\t\tterm = <nodes.Term> this.create(nodes.Term);\r\n\t\tif (term.setExpression(this._parseVariable()) ||\r\n\t\t\tterm.setExpression(this._parseEscaped())) {\r\n\r\n\t\t\treturn <nodes.Term> this.finish(term);\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\tpublic _parseEscaped():nodes.Node {\r\n\t\tvar node = this.createNode(nodes.NodeType.EscapedValue);\r\n\t\tif(this.accept(scanner.TokenType.EscapedJavaScript) ||\r\n\t\t\tthis.accept(scanner.TokenType.BadEscapedJavaScript)) {\r\n\r\n\t\t\treturn this.finish(node);\r\n\t\t}\r\n\r\n\t\tif(this.accept(scanner.TokenType.Delim, '~')) {\r\n\t\t\treturn this.finish(node, this.accept(scanner.TokenType.String) ? null : errors.ParseError.TermExpected);\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\tpublic _parseOperator(): nodes.Node {\r\n\t\tvar node = this._parseGuardOperator();\r\n\t\tif(node) {\r\n\t\t\treturn node;\r\n\t\t} else {\r\n\t\t\treturn super._parseOperator();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _parseGuardOperator(): nodes.Node {\r\n\t\tvar node = this.createNode(nodes.NodeType.Operator);\r\n\t\tif (this.accept(scanner.TokenType.Delim, '>')) {\r\n\t\t\tthis.accept(scanner.TokenType.Delim, '=');\r\n\t\t\treturn node;\r\n\t\t} else if (this.accept(scanner.TokenType.Delim,  '=')) {\r\n\t\t\tthis.accept(scanner.TokenType.Delim,  '<');\r\n\t\t\treturn node;\r\n\t\t} else if (this.accept(scanner.TokenType.Delim,  '<')) {\r\n\t\t\treturn node;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\tpublic _parseRuleSetDeclaration() : nodes.Node {\r\n\t\tif (this.peek(scanner.TokenType.AtKeyword)) {\r\n\t\t\treturn this._parseKeyframe()\r\n\t\t\t\t|| this._parseMedia()\r\n\t\t\t\t|| this._parseVariableDeclaration(); // Variable declarations\r\n\t\t}\r\n\t\treturn this._tryParseMixinDeclaration()\r\n\t\t\t|| this._tryParseRuleset(true)  // nested ruleset\r\n\t\t\t|| this._parseMixinReference() // less mixin reference\r\n\t\t\t|| this._parseExtend() // less extend declaration\r\n\t\t\t|| super._parseRuleSetDeclaration(); // try css ruleset declaration as the last option\r\n\t}\r\n\r\n\tpublic _parseSimpleSelectorBody(): nodes.Node {\r\n\t\treturn this._parseSelectorCombinator() || super._parseSimpleSelectorBody();\r\n\t}\r\n\r\n\tpublic _parseSelectorCombinator():nodes.Node {\r\n\t\tvar node = this.createNode(nodes.NodeType.SelectorCombinator);\r\n\t\tif (this.accept(scanner.TokenType.Delim, '&')) {\r\n\t\t\twhile (!this.hasWhitespace() && (this.accept(scanner.TokenType.Delim, '-') || node.addChild(this._parseIdent()) || this.accept(scanner.TokenType.Delim, '&'))) {\r\n\t\t\t\t//  support &-foo\r\n\t\t\t}\r\n\t\t\treturn this.finish(node);\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\tpublic _parseSelectorIdent() : nodes.Node {\r\n\t\treturn this._parseIdent() || this._parseSelectorInterpolation();\r\n\t}\r\n\r\n\tpublic _parseSelectorInterpolation():nodes.Node {\r\n\t\t// Selector interpolation;  old: ~\"@{name}\", new: @{name}\r\n\t\tvar node = this.createNode(nodes.NodeType.SelectorInterpolation);\r\n\t\tif (this.accept(scanner.TokenType.Delim, '~')) {\r\n\t\t\tif (!this.hasWhitespace() && (this.accept(scanner.TokenType.String) || this.accept(scanner.TokenType.BadString))) {\r\n\t\t\t\treturn this.finish(node);\r\n\t\t\t}\r\n\t\t\treturn this.finish(node, errors.ParseError.StringLiteralExpected);\r\n\t\t} else if (this.accept(scanner.TokenType.Delim, '@')) {\r\n\t\t\tif (this.hasWhitespace() || !this.accept(scanner.TokenType.CurlyL)) {\r\n\t\t\t\treturn this.finish(node, errors.ParseError.LeftCurlyExpected);\r\n\t\t\t}\r\n\t\t\tif (!node.addChild(this._parseIdent())) {\r\n\t\t\t\treturn this.finish(node, errors.ParseError.IdentifierExpected);\r\n\t\t\t}\r\n\t\t\tif (!this.accept(scanner.TokenType.CurlyR)) {\r\n\t\t\t\treturn this.finish(node, errors.ParseError.RightCurlyExpected);\r\n\t\t\t}\r\n\t\t\treturn this.finish(node);\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\tpublic _tryParseMixinDeclaration():nodes.Node {\r\n\t\tif (!this.peek(scanner.TokenType.Delim, '.')) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\tvar mark = this.mark();\r\n\t\tvar node = <nodes.MixinDeclaration> this.create(nodes.MixinDeclaration);\r\n\r\n\t\tif (!node.setIdentifier(this._parseMixinDeclarationIdentifier()) || !this.accept(scanner.TokenType.ParenthesisL)) {\r\n\t\t\tthis.restoreAtMark(mark);\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\tif (node.getParameters().addChild(this._parseMixinParameter())) {\r\n\t\t\twhile (this.accept(scanner.TokenType.Comma) || this.accept(scanner.TokenType.SemiColon)) {\r\n\t\t\t\tif (!node.getParameters().addChild(this._parseMixinParameter())) {\r\n\t\t\t\t\treturn this.finish(node, errors.ParseError.IdentifierExpected);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!this.accept(scanner.TokenType.ParenthesisR)) {\r\n\t\t\treturn this.finish(node, errors.ParseError.RightParenthesisExpected);\r\n\t\t}\r\n\t\tnode.setGuard(this._parseGuard());\r\n\r\n\t\tif (!this.peek(scanner.TokenType.CurlyL)) {\r\n\t\t\tthis.restoreAtMark(mark);\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\treturn this._parseBody(node, this._parseRuleSetDeclaration.bind(this));\r\n\t}\r\n\r\n\tpublic _parseMixinDeclarationIdentifier() : nodes.Identifier {\r\n\t\tvar identifier = <nodes.Identifier> this.create(nodes.Identifier); // identifier should contain dot\r\n\t\tthis.consumeToken(); // .\r\n\t\tif (this.hasWhitespace() || !this.accept(scanner.TokenType.Ident)) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tidentifier.referenceTypes = [ nodes.ReferenceType.Mixin ];\r\n\t\treturn this.finish(identifier);\r\n\t}\r\n\r\n\tpublic _parseExtend():nodes.Node {\r\n\t\tif (!this.peek(scanner.TokenType.Delim, '&')) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tvar mark = this.mark();\r\n\r\n\t\tvar node = <nodes.ExtendsReference> this.create(nodes.ExtendsReference);\r\n\t\tthis.consumeToken(); // &\r\n\t\tif (this.hasWhitespace() || !this.accept(scanner.TokenType.Colon) || !this.accept(scanner.TokenType.Ident, 'extend')) {\r\n\t\t\tthis.restoreAtMark(mark);\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tif (!this.accept(scanner.TokenType.ParenthesisL)) {\r\n\t\t\treturn this.finish(node, errors.ParseError.LeftParenthesisExpected);\r\n\t\t}\r\n\t\tif (!node.setSelector(this._parseSimpleSelector())) {\r\n\t\t\treturn this.finish(node, errors.ParseError.SelectorExpected);\r\n\t\t}\r\n\t\tif (!this.accept(scanner.TokenType.ParenthesisR)) {\r\n\t\t\treturn this.finish(node, errors.ParseError.RightParenthesisExpected);\r\n\t\t}\r\n\t\treturn this.finish(node);\r\n\t}\r\n\r\n\tpublic _parseMixinReference():nodes.Node {\r\n\t\tif (!this.peek(scanner.TokenType.Delim, '.')) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\tvar node = <nodes.MixinReference> this.create(nodes.MixinReference);\r\n\r\n\t\tvar identifier = <nodes.Identifier> this.create(nodes.Identifier);\r\n\t\tthis.consumeToken(); // dot, part of the identifier\r\n\t\tif (this.hasWhitespace() || !this.accept(scanner.TokenType.Ident)) {\r\n\t\t\treturn this.finish(node, errors.ParseError.IdentifierExpected);\r\n\t\t}\r\n\t\tnode.setIdentifier(this.finish(identifier));\r\n\r\n\t\tif (!this.hasWhitespace() && this.accept(scanner.TokenType.ParenthesisL)) {\r\n\t\t\tif (node.getArguments().addChild(this._parseFunctionArgument())) {\r\n\t\t\t\twhile (this.accept(scanner.TokenType.Comma) || this.accept(scanner.TokenType.SemiColon)) {\r\n\t\t\t\t\tif (!node.getArguments().addChild(this._parseExpr())) {\r\n\t\t\t\t\t\treturn this.finish(node, errors.ParseError.ExpressionExpected);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (!this.accept(scanner.TokenType.ParenthesisR)) {\r\n\t\t\t\treturn this.finish(node, errors.ParseError.RightParenthesisExpected);\r\n\t\t\t}\r\n\t\t\tidentifier.referenceTypes = [ nodes.ReferenceType.Mixin ];\r\n\t\t} else {\r\n\t\t\tidentifier.referenceTypes = [ nodes.ReferenceType.Mixin, nodes.ReferenceType.Rule ];\r\n\t\t}\r\n\r\n\t\tnode.addChild(this._parsePrio());\r\n\r\n\t\treturn this.finish(node);\r\n\t}\r\n\r\n\tpublic _parseMixinParameter():nodes.Node {\r\n\r\n\t\tvar node = <nodes.FunctionParameter> this.create(nodes.FunctionParameter);\r\n\r\n\t\t// special rest variable: @rest...\r\n\t\tif (this.peek(scanner.TokenType.AtKeyword, '@rest')) {\r\n\t\t\tvar restNode = this.create(nodes.Node);\r\n\t\t\tthis.consumeToken();\r\n\t\t\tif (!this.accept(lessScanner.Ellipsis)) {\r\n\t\t\t\treturn this.finish(node, errors.ParseError.DotExpected, [], [scanner.TokenType.Comma, scanner.TokenType.ParenthesisR]);\r\n\t\t\t}\r\n\t\t\tnode.setIdentifier(this.finish(restNode));\r\n\t\t\treturn this.finish(node);\r\n\t\t}\r\n\r\n\t\t// special var args: ...\r\n\t\tif (this.peek(lessScanner.Ellipsis)) {\r\n\t\t\tvar varargsNode = this.create(nodes.Node);\r\n\t\t\tthis.consumeToken();\r\n\t\t\tnode.setIdentifier(this.finish(varargsNode));\r\n\t\t\treturn this.finish(node);\r\n\t\t}\r\n\r\n\t\t// default variable declaration: @param: 12 or @name\r\n\t\tif (node.setIdentifier(this._parseVariable())) {\r\n\t\t\tthis.accept(scanner.TokenType.Colon);\r\n\t\t}\r\n\t\tnode.setDefaultValue(this._parseExpr(true));\r\n\r\n\t\treturn this.finish(node);\r\n\t}\r\n\r\n\tpublic _parseGuard():nodes.LessGuard {\r\n\r\n\t\tvar node = <nodes.LessGuard> this.create(nodes.LessGuard);\r\n\t\tif(!this.accept(scanner.TokenType.Ident, 'when')) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\tnode.isNegated = this.accept(scanner.TokenType.Ident, 'not');\r\n\r\n\t\tif(!node.getConditions().addChild(this._parseGuardCondition())) {\r\n\t\t\treturn <nodes.LessGuard> this.finish(node, errors.ParseError.ConditionExpected);\r\n\t\t}\r\n\t\twhile(this.accept(scanner.TokenType.Ident, 'and') || this.accept(scanner.TokenType.Comma, ',')) {\r\n\t\t\tif(!node.getConditions().addChild(this._parseGuardCondition())) {\r\n\t\t\t\treturn <nodes.LessGuard> this.finish(node, errors.ParseError.ConditionExpected);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn <nodes.LessGuard> this.finish(node);\r\n\t}\r\n\r\n\tpublic _parseGuardCondition():nodes.Node {\r\n\t\tvar node = this.create(nodes.GuardCondition);\r\n\t\tif(!this.accept(scanner.TokenType.ParenthesisL)) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\tif(!node.addChild(this._parseExpr())) {\r\n\t\t\t// empty (?)\r\n\t\t}\r\n\r\n\t\tif(!this.accept(scanner.TokenType.ParenthesisR)) {\r\n\t\t\treturn this.finish(node, errors.ParseError.RightParenthesisExpected);\r\n\t\t}\r\n\r\n\t\treturn this.finish(node);\r\n\t}\r\n\r\n\tpublic _parseFunctionIdentifier(): nodes.Identifier {\r\n\t\tif (this.peek(scanner.TokenType.Delim, '%')) {\r\n\t\t\tvar node = <nodes.Identifier> this.create(nodes.Identifier);\r\n\t\t\tnode.referenceTypes = [ nodes.ReferenceType.Function ];\r\n\t\t\tthis.consumeToken();\r\n\t\t\treturn this.finish(node);\r\n\t\t}\r\n\r\n\t\treturn super._parseFunctionIdentifier();\r\n\t}\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\n\r\nimport languageFacts = require('vs/languages/css/common/services/languageFacts');\r\nimport Modes = require('vs/editor/common/modes');\r\nimport cssIntellisense = require('vs/languages/css/common/services/intelliSense');\r\nimport nls = require('vs/nls');\r\n\r\nexport class LESSIntellisense extends cssIntellisense.CSSIntellisense {\r\n\r\n\tprivate static builtInProposals = [\r\n\t\t{\r\n\t\t\t'name': 'escape',\r\n\t\t\t'example': 'escape(@string);',\r\n\t\t\t'description': nls.localize('less.builtin.escape', 'URL encodes a string')\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'e',\r\n\t\t\t'example': 'e(@string);',\r\n\t\t\t'description': nls.localize('less.builtin.e', 'escape string content')\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'replace',\r\n\t\t\t'example': 'replace(@string, @pattern, @replacement[, @flags]);',\r\n\t\t\t'description': nls.localize('less.builtin.replace', 'string replace')\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'unit',\r\n\t\t\t'example': 'unit(@dimension, [@unit: \\'\\']);',\r\n\t\t\t'description': nls.localize('less.builtin.unit', 'remove or change the unit of a dimension')\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'color',\r\n\t\t\t'example': 'color(@string);',\r\n\t\t\t'description': nls.localize('less.builtin.color', 'parses a string to a color')\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'convert',\r\n\t\t\t'example': 'convert(@value, unit);',\r\n\t\t\t'description': nls.localize('less.builtin.convert', 'converts numbers from one type into another')\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'data-uri',\r\n\t\t\t'example': 'data-uri([mimetype,] url);',\r\n\t\t\t'description': nls.localize('less.builtin.data-uri', 'inlines a resource and falls back to `url()`')\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'length',\r\n\t\t\t'example': 'length(@list);',\r\n\t\t\t'description': nls.localize('less.builtin.length', 'returns the number of elements in a value list')\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'extract',\r\n\t\t\t'example': 'extract(@list, index);',\r\n\t\t\t'description': nls.localize('less.builtin.extract', 'returns a value at the specified position in the list')\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'abs',\r\n\t\t\t'description': nls.localize('less.builtin.abs', 'absolute value of a number'),\r\n\t\t\t'example': 'abs(number);'\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'acos',\r\n\t\t\t'description': nls.localize('less.builtin.acos', 'arccosine - inverse of cosine function'),\r\n\t\t\t'example': 'acos(number);'\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'asin',\r\n\t\t\t'description': nls.localize('less.builtin.asin', 'arcsine - inverse of sine function'),\r\n\t\t\t'example': 'asin(number);'\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'ceil',\r\n\t\t\t'example': 'ceil(@number);',\r\n\t\t\t'description': nls.localize('less.builtin.ceil', 'rounds up to an integer')\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'cos',\r\n\t\t\t'description': nls.localize('less.builtin.cos', 'cosine function'),\r\n\t\t\t'example': 'cos(number);'\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'floor',\r\n\t\t\t'description': nls.localize('less.builtin.floor', 'rounds down to an integer'),\r\n\t\t\t'example': 'floor(@number);'\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'percentage',\r\n\t\t\t'description': nls.localize('less.builtin.percentage', 'converts to a %, e.g. 0.5 > 50%'),\r\n\t\t\t'example': 'percentage(@number);'\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'round',\r\n\t\t\t'description': nls.localize('less.builtin.round', 'rounds a number to a number of places'),\r\n\t\t\t'example': 'round(number, [places: 0]);'\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'sqrt',\r\n\t\t\t'description': nls.localize('less.builtin.sqrt', 'calculates square root of a number'),\r\n\t\t\t'example': 'sqrt(number);'\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'sin',\r\n\t\t\t'description': nls.localize('less.builtin.sin', 'sine function'),\r\n\t\t\t'example': 'sin(number);'\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'tan',\r\n\t\t\t'description': nls.localize('less.builtin.tan', 'tangent function'),\r\n\t\t\t'example': 'tan(number);'\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'atan',\r\n\t\t\t'description': nls.localize('less.builtin.atan', 'arctangent - inverse of tangent function'),\r\n\t\t\t'example': 'atan(number);'\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'pi',\r\n\t\t\t'description': nls.localize('less.builtin.pi', 'returns pi'),\r\n\t\t\t'example': 'pi();'\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'pow',\r\n\t\t\t'description': nls.localize('less.builtin.pow', 'first argument raised to the power of the second argument'),\r\n\t\t\t'example': 'pow(@base, @exponent);'\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'mod',\r\n\t\t\t'description': nls.localize('less.builtin.mod', 'first argument modulus second argument'),\r\n\t\t\t'example': 'mod(number, number);'\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'min',\r\n\t\t\t'description': nls.localize('less.builtin.min', 'returns the lowest of one or more values'),\r\n\t\t\t'example': 'min(@x, @y);'\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'max',\r\n\t\t\t'description': nls.localize('less.builtin.max', 'returns the lowest of one or more values'),\r\n\t\t\t'example': 'max(@x, @y);'\r\n\t\t}\r\n\t];\r\n\r\n\tprivate static colorProposals = [\r\n\t\t{\r\n\t\t\t'name': 'argb',\r\n\t\t\t'example': 'argb(@color);',\r\n\t\t\t'description': nls.localize('less.builtin.argb', 'creates a #AARRGGBB')\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'hsl',\r\n\t\t\t'example': 'hsl(@hue, @saturation, @lightness);',\r\n\t\t\t'description': nls.localize('less.builtin.hsl', 'creates a color')\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'hsla',\r\n\t\t\t'example': 'hsla(@hue, @saturation, @lightness, @alpha);',\r\n\t\t\t'description': nls.localize('less.builtin.hsla', 'creates a color')\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'hsv',\r\n\t\t\t'example': 'hsv(@hue, @saturation, @value);',\r\n\t\t\t'description': nls.localize('less.builtin.hsv', 'creates a color')\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'hsva',\r\n\t\t\t'example': 'hsva(@hue, @saturation, @value, @alpha);',\r\n\t\t\t'description': nls.localize('less.builtin.hsva', 'creates a color')\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'hue',\r\n\t\t\t'example': 'hue(@color);',\r\n\t\t\t'description': nls.localize('less.builtin.hue', 'returns the `hue` channel of `@color` in the HSL space')\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'saturation',\r\n\t\t\t'example': 'saturation(@color);',\r\n\t\t\t'description': nls.localize('less.builtin.saturation', 'returns the `saturation` channel of `@color` in the HSL space')\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'lightness',\r\n\t\t\t'example': 'lightness(@color);',\r\n\t\t\t'description': nls.localize('less.builtin.lightness', 'returns the `lightness` channel of `@color` in the HSL space')\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'hsvhue',\r\n\t\t\t'example': 'hsvhue(@color);',\r\n\t\t\t'description': nls.localize('less.builtin.hsvhue', 'returns the `hue` channel of `@color` in the HSV space')\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'hsvsaturation',\r\n\t\t\t'example': 'hsvsaturation(@color);',\r\n\t\t\t'description': nls.localize('less.builtin.hsvsaturation', 'returns the `saturation` channel of `@color` in the HSV space')\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'hsvvalue',\r\n\t\t\t'example': 'hsvvalue(@color);',\r\n\t\t\t'description': nls.localize('less.builtin.hsvvalue', 'returns the `value` channel of `@color` in the HSV space')\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'red',\r\n\t\t\t'example': 'red(@color);',\r\n\t\t\t'description': nls.localize('less.builtin.red', 'returns the `red` channel of `@color`')\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'green',\r\n\t\t\t'example': 'green(@color);',\r\n\t\t\t'description': nls.localize('less.builtin.green', 'returns the `green` channel of `@color`')\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'blue',\r\n\t\t\t'example': 'blue(@color);',\r\n\t\t\t'description': nls.localize('less.builtin.blue', 'returns the `blue` channel of `@color`')\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'alpha',\r\n\t\t\t'example': 'alpha(@color);',\r\n\t\t\t'description': nls.localize('less.builtin.alpha', 'returns the `alpha` channel of `@color`')\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'luma',\r\n\t\t\t'example': 'luma(@color);',\r\n\t\t\t'description': nls.localize('less.builtin.luma', 'returns the `luma` value (perceptual brightness) of `@color`')\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'saturate',\r\n\t\t\t'example': 'saturate(@color, 10%);',\r\n\t\t\t'description': nls.localize('less.builtin.saturate', 'return `@color` 10% points more saturated')\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'desaturate',\r\n\t\t\t'example': 'desaturate(@color, 10%);',\r\n\t\t\t'description': nls.localize('less.builtin.desaturate', 'return `@color` 10% points less saturated')\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'lighten',\r\n\t\t\t'example': 'lighten(@color, 10%);',\r\n\t\t\t'description': nls.localize('less.builtin.lighten', 'return `@color` 10% points lighter')\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'darken',\r\n\t\t\t'example': 'darken(@color, 10%);',\r\n\t\t\t'description': nls.localize('less.builtin.darken', 'return `@color` 10% points darker')\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'fadein',\r\n\t\t\t'example': 'fadein(@color, 10%);',\r\n\t\t\t'description': nls.localize('less.builtin.fadein', 'return `@color` 10% points less transparent')\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'fadeout',\r\n\t\t\t'example': 'fadeout(@color, 10%);',\r\n\t\t\t'description': nls.localize('less.builtin.fadeout', 'return `@color` 10% points more transparent')\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'fade',\r\n\t\t\t'example': 'fade(@color, 50%);',\r\n\t\t\t'description': nls.localize('less.builtin.fade', 'return `@color` with 50% transparency')\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'spin',\r\n\t\t\t'example': 'spin(@color, 10);',\r\n\t\t\t'description': nls.localize('less.builtin.spin', 'return `@color` with a 10 degree larger in hue')\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'mix',\r\n\t\t\t'example': 'mix(@color1, @color2, [@weight: 50%]);',\r\n\t\t\t'description': nls.localize('less.builtin.mix', 'return a mix of `@color1` and `@color2`')\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'greyscale',\r\n\t\t\t'example': 'greyscale(@color);',\r\n\t\t\t'description': nls.localize('less.builtin.greyscale', 'returns a grey, 100% desaturated color')\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'contrast',\r\n\t\t\t'example': 'contrast(@color1, [@darkcolor: black], [@lightcolor: white], [@threshold: 43%]);',\r\n\t\t\t'description': nls.localize('less.builtin.contrast', 'return `@darkcolor` if `@color1 is> 43% luma` otherwise return `@lightcolor`, see notes')\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'multiply',\r\n\t\t\t'example': 'multiply(@color1, @color2);'\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'screen',\r\n\t\t\t'example': 'screen(@color1, @color2);'\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'overlay',\r\n\t\t\t'example': 'overlay(@color1, @color2);'\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'softlight',\r\n\t\t\t'example': 'softlight(@color1, @color2);'\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'hardlight',\r\n\t\t\t'example': 'hardlight(@color1, @color2);'\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'difference',\r\n\t\t\t'example': 'difference(@color1, @color2);'\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'exclusion',\r\n\t\t\t'example': 'exclusion(@color1, @color2);'\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'average',\r\n\t\t\t'example': 'average(@color1, @color2);'\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'negation',\r\n\t\t\t'example': 'negation(@color1, @color2);'\r\n\t\t}\r\n\t];\r\n\r\n\r\n\tconstructor() {\r\n\t\tsuper('@');\r\n\t}\r\n\r\n\tprivate createFunctionProposals(proposals: { name: string; example: string; description?: string; }[], result: Modes.ISuggestion[]): Modes.ISuggestion[] {\r\n\t\tproposals.forEach((p) => {\r\n\t\t\tresult.push({\r\n\t\t\t\tlabel: p.name,\r\n\t\t\t\ttypeLabel: p.example,\r\n\t\t\t\tdocumentationLabel: p.description,\r\n\t\t\t\tcodeSnippet: p.name + '({{}})',\r\n\t\t\t\ttype: 'function'\r\n\t\t\t});\r\n\t\t});\r\n\t\treturn result;\r\n\t}\r\n\r\n\r\n\tpublic getTermProposals(result:Modes.ISuggestion[]):Modes.ISuggestion[] {\r\n\t\tthis.createFunctionProposals(LESSIntellisense.builtInProposals, result);\r\n\t\treturn super.getTermProposals(result);\r\n\t}\r\n\r\n\tprotected getColorProposals(entry: languageFacts.IEntry, result: Modes.ISuggestion[]): Modes.ISuggestion[] {\r\n\t\tthis.createFunctionProposals(LESSIntellisense.colorProposals, result);\r\n\t\treturn super.getColorProposals(entry, result);\r\n\t}\r\n\r\n}\r\n\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\n\r\nimport cssWorker = require('vs/languages/css/common/cssWorker');\r\nimport cssIntellisense = require('vs/languages/css/common/services/intelliSense');\r\nimport cssParser = require('vs/languages/css/common/parser/cssParser');\r\nimport lessParser = require('./parser/lessParser');\r\nimport lessIntellisense = require('./services/intelliSense');\r\n\r\nexport class LessWorker extends cssWorker.CSSWorker {\r\n\r\n\tpublic createIntellisense(): cssIntellisense.CSSIntellisense {\r\n\t\treturn new lessIntellisense.LESSIntellisense();\r\n\t}\r\n\r\n\tpublic createParser(): cssParser.Parser {\r\n\t\treturn new lessParser.LessParser();\r\n\t}\r\n\r\n}\r\n"]}